#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
//50037_v6_3_0_2259) { }
// Autogenerated code - do not delete or modify -->

Report 50644 "Trial Balance Ver2"
{
    RDLCLayout = 'Layouts/TrialBalanceVer2.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("G/L Account"; "G/L Account")
        {
            DataItemTableView = where("Account Type" = filter(Posting));
            RequestFilterFields = "No.";
            column(ReportForNavId_4645; 4645) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(Company_Name; Company.Name)
            {
            }
            column(Company_Address; Company.Address)
            {
            }
            column(Company_Address_2; Company."Address 2")
            {
            }
            column(Company_Phone_No; Company."Phone No.")
            {
            }
            column(Company_Fax_No; Company."Fax No.")
            {
            }
            column(Company_Picture; Company.Picture)
            {
            }
            column(Company_Email; Company."E-Mail")
            {
            }

            column(UserId; UserId)
            {
            }
            column(StartBalance; StartBalance)
            {
            }
            column(VarGLTotalDebits; VarGLTotalDebits)
            {
            }
            column(VarGLTotalCredits; VarGLTotalCredits)
            {
            }
            column(VarGLClosingBalance; VarGLClosingBalance)
            {
            }
            column(OldNo_GLAccount; "Old No.")
            {
            }
            column(No_GLAccount; "G/L Account"."No.")
            {
            }
            column(Name_GLAccount; "G/L Account".Name)
            {
            }
            column(GLFilter; GLFilter)
            {
            }
            column(AccountType_GLAccount; "G/L Account"."Account Type")
            {
            }
            trigger OnAfterGetRecord();
            begin
                //=====================================================================Balance B/F
                StartBalance := 0;
                if VarReportFilter <> '' then
                    if (VarReportFilter <> '..*') then begin
                        SetFilter("Date Filter", VarOpeningBalDateFilter);
                        CalcFields(Balance);
                        StartBalance := Balance;
                    end;
                GLAccBalance := StartBalance;
                //=====================================================================End Balance B/F
                //====================================================================GL Closing Balance
                SetFilter("Date Filter", VarClosingBalDateFilter);
                CalcFields(Balance);
                VarGLClosingBalance := Balance;
                //====================================================================GL Closing Balance
                /*IF (GLAccBalance = 0) AND (VarGLClosingBalance = 0) THEN
				   CurrReport.SKIP;*/
                //=======================================================Get Total Debits & Credits
                VarGLTotalDebits := 0;
                VarGLTotalCredits := 0;
                ObjGLEntry.Reset;
                ObjGLEntry.SetRange(ObjGLEntry."G/L Account No.", "No.");
                ObjGLEntry.SetFilter(ObjGLEntry."Posting Date", VarReportFilter);
                if ObjGLEntry.FindSet then begin
                    ObjGLEntry.CalcSums(ObjGLEntry."Debit Amount", ObjGLEntry."Credit Amount");
                    VarGLTotalDebits := ObjGLEntry."Debit Amount";
                    VarGLTotalCredits := ObjGLEntry."Credit Amount";
                end;

            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //:= false;
        end;
    }

    trigger OnInitReport()
    begin
        Company.Get();
        Company.CalcFields(Company.Picture);
        ;


    end;

    trigger OnPostReport()
    begin
        GLFilter := "G/L Account".GetFilters;
        PeriodText := "G/L Account".GetFilter("Date Filter");
        VarReportFilter := "G/L Account".GetFilter("G/L Account"."Date Filter");
        //VarMinDateDateFilter:=SFactory.FnRunGetStatementDateFilter(VarReportFilter);
        VarMinDateDateFilter := "G/L Account".GetRangeMin("G/L Account"."Date Filter") - 1;
        VarDateFilterMax := "G/L Account".GetRangemax("G/L Account"."Date Filter");
        VarOpeningBalDateFilter := '..' + Format(VarMinDateDateFilter);
        VarClosingBalDateFilter := '..' + Format(VarDateFilterMax);
        ;

    end;

    trigger OnPreReport()
    begin
        ;

    end;

    var
        Company: Record "Company Information";
        VarReportFilter: Text;
        VarMinDateDateFilter: Date;
        SFactory: Codeunit "SURESTEP Factory";
        StartBalance: Decimal;
        GLAccBalance: Decimal;
        ObjGLEntry: Record "G/L Entry";
        VarGLTotalDebits: Decimal;
        VarGLTotalCredits: Decimal;
        VarDateFilterMax: Date;
        VarClosingBalDateFilter: Text;
        VarGLClosingBalance: Decimal;
        VarOpeningBalDateFilter: Text;
        GLFilter: Text[250];
        PeriodText: Text[30];

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    //50037_v6_3_0_2259;






    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
