#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516134_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50134 "Imprest Surrender Report"
{
    RDLCLayout = 'Layouts/ImprestSurrenderReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Imprest Surrender Header"; "Imprest Surrender Header")
        {
            RequestFilterFields = No;
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(Surrender_No; "Imprest Surrender Header".No)
            {
            }
            column(SurrenderDate_ImprestSurrenderHeader; "Imprest Surrender Header"."Surrender Date")
            {
            }
            column(Type_ImprestSurrenderHeader; "Imprest Surrender Header".Type)
            {
            }
            column(PayMode_ImprestSurrenderHeader; "Imprest Surrender Header"."Pay Mode")
            {
            }
            column(ChequeNo_ImprestSurrenderHeader; "Imprest Surrender Header"."Cheque No")
            {
            }
            column(ChequeDate_ImprestSurrenderHeader; "Imprest Surrender Header"."Cheque Date")
            {
            }
            column(ChequeType_ImprestSurrenderHeader; "Imprest Surrender Header"."Cheque Type")
            {
            }
            column(BankCode_ImprestSurrenderHeader; "Imprest Surrender Header"."Bank Code")
            {
            }
            column(ReceivedFrom_ImprestSurrenderHeader; "Imprest Surrender Header"."Received From")
            {
            }
            column(OnBehalfOf_ImprestSurrenderHeader; "Imprest Surrender Header"."On Behalf Of")
            {
            }
            column(Cashier_ImprestSurrenderHeader; "Imprest Surrender Header".Cashier)
            {
            }
            column(AccountType_ImprestSurrenderHeader; "Imprest Surrender Header"."Account Type")
            {
            }
            column(AccountNo_ImprestSurrenderHeader; "Imprest Surrender Header"."Account No.")
            {
            }
            column(NoSeries_ImprestSurrenderHeader; "Imprest Surrender Header"."No. Series")
            {
            }
            column(AccountName_ImprestSurrenderHeader; "Imprest Surrender Header"."Account Name")
            {
            }
            column(Posted_ImprestSurrenderHeader; "Imprest Surrender Header".Posted)
            {
            }
            column(DatePosted_ImprestSurrenderHeader; "Imprest Surrender Header"."Date Posted")
            {
            }
            column(TimePosted_ImprestSurrenderHeader; "Imprest Surrender Header"."Time Posted")
            {
            }
            column(PostedBy_ImprestSurrenderHeader; "Imprest Surrender Header"."Posted By")
            {
            }
            column(Amount_ImprestSurrenderHeader; "Imprest Surrender Header".Amount)
            {
            }
            column(Remarks_ImprestSurrenderHeader; "Imprest Surrender Header".Remarks)
            {
            }
            column(TransactionName_ImprestSurrenderHeader; "Imprest Surrender Header"."Transaction Name")
            {
            }
            column(NetAmount_ImprestSurrenderHeader; "Imprest Surrender Header"."Net Amount")
            {
            }
            column(PayingBankAccount_ImprestSurrenderHeader; "Imprest Surrender Header"."Paying Bank Account")
            {
            }
            column(Payee_ImprestSurrenderHeader; "Imprest Surrender Header".Payee)
            {
            }
            column(GlobalDimension1Code_ImprestSurrenderHeader; "Imprest Surrender Header"."Global Dimension 1 Code")
            {
            }
            column(GlobalDimension2Code_ImprestSurrenderHeader; "Imprest Surrender Header"."Global Dimension 2 Code")
            {
            }
            column(BankAccountNo_ImprestSurrenderHeader; "Imprest Surrender Header"."Bank Account No")
            {
            }
            column(CashierBankAccount_ImprestSurrenderHeader; "Imprest Surrender Header"."Cashier Bank Account")
            {
            }
            column(Status_ImprestSurrenderHeader; "Imprest Surrender Header".Status)
            {
            }
            column(Grouping_ImprestSurrenderHeader; "Imprest Surrender Header".Grouping)
            {
            }
            column(PaymentType_ImprestSurrenderHeader; "Imprest Surrender Header"."Payment Type")
            {
            }
            column(BankType_ImprestSurrenderHeader; "Imprest Surrender Header"."Bank Type")
            {
            }
            column(PVType_ImprestSurrenderHeader; "Imprest Surrender Header"."PV Type")
            {
            }
            column(ApplytoID_ImprestSurrenderHeader; "Imprest Surrender Header"."Apply to ID")
            {
            }
            column(ImprestIssueDate_ImprestSurrenderHeader; "Imprest Surrender Header"."Imprest Issue Date")
            {
            }
            column(Surrendered_ImprestSurrenderHeader; "Imprest Surrender Header".Surrendered)
            {
            }
            column(ImprestIssueDocNo_ImprestSurrenderHeader; "Imprest Surrender Header"."Imprest Issue Doc. No")
            {
            }
            column(VoteBook_ImprestSurrenderHeader; "Imprest Surrender Header"."Vote Book")
            {
            }
            column(TotalAllocation_ImprestSurrenderHeader; "Imprest Surrender Header"."Total Allocation")
            {
            }
            column(TotalExpenditure_ImprestSurrenderHeader; "Imprest Surrender Header"."Total Expenditure")
            {
            }
            column(TotalCommitments_ImprestSurrenderHeader; "Imprest Surrender Header"."Total Commitments")
            {
            }
            column(Balance_ImprestSurrenderHeader; "Imprest Surrender Header".Balance)
            {
            }
            column(BalanceLessthisEntry_ImprestSurrenderHeader; "Imprest Surrender Header"."Balance Less this Entry")
            {
            }
            column(PettyCash_ImprestSurrenderHeader; "Imprest Surrender Header"."Petty Cash")
            {
            }
            column(ShortcutDimension2Code_ImprestSurrenderHeader; "Imprest Surrender Header"."Shortcut Dimension 2 Code")
            {
            }
            column(FunctionName_ImprestSurrenderHeader; "Imprest Surrender Header"."Function Name")
            {
            }
            column(BudgetCenterName_ImprestSurrenderHeader; "Imprest Surrender Header"."Budget Center Name")
            {
            }
            column(UserID_ImprestSurrenderHeader; "Imprest Surrender Header"."User ID")
            {
            }
            column(IssueVoucherType_ImprestSurrenderHeader; "Imprest Surrender Header"."Issue Voucher Type")
            {
            }
            column(ShortcutDimension3Code_ImprestSurrenderHeader; "Imprest Surrender Header"."Shortcut Dimension 3 Code")
            {
            }
            column(ShortcutDimension4Code_ImprestSurrenderHeader; "Imprest Surrender Header"."Shortcut Dimension 4 Code")
            {
            }
            column(Dim3_ImprestSurrenderHeader; "Imprest Surrender Header".Dim3)
            {
            }
            column(Dim4_ImprestSurrenderHeader; "Imprest Surrender Header".Dim4)
            {
            }
            column(CurrencyFactor_ImprestSurrenderHeader; "Imprest Surrender Header"."Currency Factor")
            {
            }
            column(CurrencyCode_ImprestSurrenderHeader; "Imprest Surrender Header"."Currency Code")
            {
            }
            column(ResponsibilityCenter_ImprestSurrenderHeader; "Imprest Surrender Header"."Responsibility Center")
            {
            }
            column(AmountSurrenderedLCY_ImprestSurrenderHeader; "Imprest Surrender Header"."Amount Surrendered LCY")
            {
            }
            column(ActualSpent_ImprestSurrenderHeader; "Imprest Surrender Header"."Actual Spent")
            {
            }
            column(DimensionSetID_ImprestSurrenderHeader; "Imprest Surrender Header"."Dimension Set ID")
            {
            }
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            column(SurrenderAmount_ImprestSurrenderHeader; "Imprest Surrender Header"."Surrender Amount")
            {
            }
            dataitem("Imprest Surrender Details"; "Imprest Surrender Details")
            {
                DataItemLink = "Surrender Doc No." = field(No);
                column(ReportForNavId_1000000067; 1000000067) { } // Autogenerated by ForNav - Do not delete
                column(AccountNo_ImprestSurrenderDetails; "Imprest Surrender Details"."Account No:")
                {
                }
                column(AccountName_ImprestSurrenderDetails; "Imprest Surrender Details"."Account Name")
                {
                }
                column(Amount_ImprestSurrenderDetails; "Imprest Surrender Details".Amount)
                {
                }
                column(ImprestHolder_ImprestSurrenderDetails; "Imprest Surrender Details"."Imprest Holder")
                {
                }
                column(ActualSpent_ImprestSurrenderDetails; "Imprest Surrender Details"."Actual Spent")
                {
                }
                column(SurrenderDate_ImprestSurrenderDetails; "Imprest Surrender Details"."Surrender Date")
                {
                }
                column(CashReceiptNo_ImprestSurrenderDetails; "Imprest Surrender Details"."Cash Receipt No")
                {
                }
                column(CashSurrenderAmt_ImprestSurrenderDetails; "Imprest Surrender Details"."Cash Surrender Amt")
                {
                }
                column(CashReceiptAmount_ImprestSurrenderDetails; "Imprest Surrender Details"."Cash Receipt Amount")
                {
                }
                column(DateIssued_ImprestSurrenderDetails; "Imprest Surrender Details"."Date Issued")
                {
                }
                column(Amount_To_Surrender; AmountToSurrender)
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                "Imprest Surrender Header".CalcFields("Imprest Surrender Header"."Surrender Amount");
                "Imprest Surrender Header".CalcFields("Imprest Surrender Header"."Actual Spent");
                AmountToSurrender := ROUND("Imprest Surrender Header"."Surrender Amount" - "Imprest Surrender Header"."Actual Spent", 0.01, '>');
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Get();
        CI.CalcFields(CI.Picture);
        Amount := 0;
        ActualSpend := 0;
        AmountToSurrender := 0;
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";
        Amount: Decimal;
        ActualSpend: Decimal;
        AmountToSurrender: Decimal;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516134_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
