#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
//51516015_v6_3_0_2259) { }
// Autogenerated code - do not delete or modify -->

Report 50625 "Outstanding IOU Report"
{
    RDLCLayout = 'Layouts/OutstandingIOUReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Imprest Header"; "Imprest Header")
        {
            //DataItemTableView = where(Status=const("4"),"Surrender Status"=const(" "));
            RequestFilterFields = Date, "Responsibility Center";
            column(ReportForNavId_1102755000; 1102755000) { } // Autogenerated by ForNav - Do not delete
            column(No_StaffAdvanceHeader; "Imprest Header"."No.")
            {
            }
            column(Date_StaffAdvanceHeader; "Imprest Header".Date)
            {
            }
            column(CurrencyCode_StaffAdvanceHeader; "Imprest Header"."Currency Code")
            {
            }
            column(Payee_StaffAdvanceHeader; "Imprest Header".Payee)
            {
            }
            column(OnBehalfOf_StaffAdvanceHeader; "Imprest Header"."On Behalf Of")
            {
            }
            column(Cashier_StaffAdvanceHeader; "Imprest Header".Cashier)
            {
            }
            column(Posted_StaffAdvanceHeader; "Imprest Header".Posted)
            {
            }
            column(DatePosted_StaffAdvanceHeader; "Imprest Header"."Date Posted")
            {
            }
            column(TimePosted_StaffAdvanceHeader; "Imprest Header"."Time Posted")
            {
            }
            column(PostedBy_StaffAdvanceHeader; "Imprest Header"."Posted By")
            {
            }
            column(TotalPaymentAmount_StaffAdvanceHeader; "Imprest Header"."Total Payment Amount")
            {
            }
            column(PayingBankAccount_StaffAdvanceHeader; "Imprest Header"."Paying Bank Account")
            {
            }
            column(TotalVATAmount_StaffAdvanceHeader; "Imprest Header"."Total VAT Amount")
            {
            }
            column(TotalWitholdingTaxAmount_StaffAdvanceHeader; "Imprest Header"."Total Witholding Tax Amount")
            {
            }
            column(TotalNetAmount_StaffAdvanceHeader; "Imprest Header"."Total Net Amount")
            {
            }
            column(TotalNetAmountLCY_StaffAdvanceHeader; "Imprest Header"."Total Net Amount LCY")
            {
            }
            column(Purpose_StaffAdvanceHeader; "Imprest Header".Purpose)
            {
            }
            column(AccountType_StaffAdvanceHeader; "Imprest Header"."Account Type")
            {
            }
            column(AccountNo_StaffAdvanceHeader; "Imprest Header"."Account No.")
            {
            }
            column(ComapnyName; CompanyInfo.Name)
            {
            }
            column(CompanyPicture; CompanyInfo.Picture)
            {
            }
            column(RemainingAmount; RemainingAmount)
            {
            }
            trigger OnAfterGetRecord();
            begin
                CustLedger.Reset;
                CustLedger.SetRange(CustLedger."Customer No.", "Account No.");
                //CustLedger.SETRANGE(CustLedger."Posting Date","Staff Advance Header"."Date Posted");
                CustLedger.SetRange(CustLedger."Document No.", "No.");
                if CustLedger.FindFirst then begin
                    CustLedger.CalcFields("Remaining Amount");
                    RemainingAmount := CustLedger."Remaining Amount";
                end
                else
                    RemainingAmount := 0;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //:= false;
        end;
    }

    trigger OnInitReport()
    begin
        ;


    end;

    trigger OnPostReport()
    begin
        ;

    end;

    trigger OnPreReport()
    begin
        CompanyInfo.Get;
        CompanyInfo.CalcFields(Picture);
        ;

    end;

    var
        CompanyInfo: Record "Company Information";
        RemainingAmount: Decimal;
        CustLedger: Record "Cust. Ledger Entry";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    //51516015_v6_3_0_2259;






    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
