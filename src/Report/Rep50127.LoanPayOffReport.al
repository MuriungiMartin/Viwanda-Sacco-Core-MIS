#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516127_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50127 "Loan PayOff Report"
{
    RDLCLayout = 'Layouts/LoanPayOffReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Loans PayOff Details"; "Loans PayOff Details")
        {
            DataItemTableView = where(Posted = filter(true), "Total PayOff" = filter(> 0));
            RequestFilterFields = "Posting Date", "Document No", "Member No";
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(DocumentNo_LoansPayOffDetails; "Loans PayOff Details"."Document No")
            {
            }
            column(LoantoPayOff_LoansPayOffDetails; "Loans PayOff Details"."Loan to PayOff")
            {
            }
            column(MemberNo_LoansPayOffDetails; "Loans PayOff Details"."Member No")
            {
            }
            column(LoanType_LoansPayOffDetails; "Loans PayOff Details"."Loan Type")
            {
            }
            column(PrinciplePayOff_LoansPayOffDetails; "Loans PayOff Details"."Principle PayOff")
            {
            }
            column(InterestOnPayOff_LoansPayOffDetails; "Loans PayOff Details"."Interest On PayOff")
            {
            }
            column(TotalPayOff_LoansPayOffDetails; "Loans PayOff Details"."Total PayOff")
            {
            }
            column(MonthlyRepayment_LoansPayOffDetails; "Loans PayOff Details"."Monthly Repayment")
            {
            }
            column(InterestPaid_LoansPayOffDetails; "Loans PayOff Details"."Interest Paid")
            {
            }
            column(OutstandingBalance_LoansPayOffDetails; "Loans PayOff Details"."Outstanding Balance")
            {
            }
            column(InterestRate_LoansPayOffDetails; "Loans PayOff Details"."Interest Rate")
            {
            }
            column(IDNO_LoansPayOffDetails; "Loans PayOff Details"."ID. NO")
            {
            }
            column(CommisiononPayOff_LoansPayOffDetails; "Loans PayOff Details"."Commision on PayOff")
            {
            }
            column(PartialBridged_LoansPayOffDetails; "Loans PayOff Details"."Partial Bridged")
            {
            }
            column(RemainingInstallments_LoansPayOffDetails; "Loans PayOff Details"."Remaining Installments")
            {
            }
            column(FinaleInstalment_LoansPayOffDetails; "Loans PayOff Details"."Finale Instalment")
            {
            }
            column(PenaltyCharged_LoansPayOffDetails; "Loans PayOff Details"."Penalty Charged")
            {
            }
            column(StaffNo_LoansPayOffDetails; "Loans PayOff Details"."Staff No")
            {
            }
            column(CommissioningBalance_LoansPayOffDetails; "Loans PayOff Details"."Commissioning Balance")
            {
            }
            column(Source_LoansPayOffDetails; "Loans PayOff Details".Source)
            {
            }
            column(LoanOutstanding_LoansPayOffDetails; "Loans PayOff Details"."Loan Outstanding")
            {
            }
            column(Posted_LoansPayOffDetails; "Loans PayOff Details".Posted)
            {
            }
            column(PostingDate_LoansPayOffDetails; "Loans PayOff Details"."Posting Date")
            {
            }
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516127_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
