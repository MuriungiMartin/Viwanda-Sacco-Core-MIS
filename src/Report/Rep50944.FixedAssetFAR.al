#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516944_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50944 "Fixed Asset - FAR"
{
    Caption = 'Fixed Asset - Acquisition List';
    RDLCLayout = 'Layouts/FixedAsset-FAR.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Fixed Asset"; "Fixed Asset")
        {
            RequestFilterFields = "No.", "FA Class Code", "FA Subclass Code", "Budgeted Asset";
            column(ReportForNavId_3794; 3794) { } // Autogenerated by ForNav - Do not delete
            column(CompanyName; COMPANYNAME)
            {
            }
            column(DeprBookText; DeprBookText)
            {
            }
            column(FixAssetTableCaptFaFilter; TableCaption + ': ' + FAFilter)
            {
            }
            column(No_FixedAsset; "Fixed Asset"."No.")
            {
                IncludeCaption = true;
            }
            column(Desc_FixedAsset; "Fixed Asset".Description)
            {
                IncludeCaption = true;
            }
            column(LocCode_FixedAsset; "Fixed Asset"."FA Location Code")
            {
                IncludeCaption = true;
            }
            column(RespEmp_FixedAsset; "Fixed Asset"."Responsible Employee")
            {
                IncludeCaption = true;
            }
            column(SerialNo_FixedAsset; "Fixed Asset"."Serial No.")
            {
                IncludeCaption = true;
            }
            column(FaDeprBookAcquDate; Format(FADeprBook."Acquisition Date"))
            {
            }
            column(FixedAssetAcqListCptn; FixedAssetAcqListCptnLbl)
            {
            }
            column(CurrReportPageNoCaption; CurrReportPageNoCaptionLbl)
            {
            }
            column(FADeprBkAcquisitionDtCptn; FADeprBkAcquisitionDtCptnLbl)
            {
            }
            column(VendorName_FixedAsset; "Fixed Asset"."Vendor Name")
            {
            }
            column(FASubclassCode_FixedAsset; "Fixed Asset"."FA Subclass Code")
            {
            }
            column(LastDateModified_FixedAsset; "Fixed Asset"."Last Date Modified")
            {
            }
            column(FAPostingGroup_FixedAsset; "Fixed Asset"."FA Posting Group")
            {
            }
            column(AssetLabel_FixedAsset; "Fixed Asset"."Asset Label")
            {
            }
            column(CreatedBy_FixedAsset; "Fixed Asset"."Created By")
            {
            }
            column(DateCreated_FixedAsset; Format("Fixed Asset"."Date Created"))
            {
            }
            column(Location_FixedAsset; "Fixed Asset".Location)
            {
            }
            dataitem("FA Depreciation Book"; "FA Depreciation Book")
            {
                DataItemLink = "FA No." = field("No.");
                column(ReportForNavId_14; 14) { } // Autogenerated by ForNav - Do not delete
                column(DepreciationMethod_FADepreciationBook; "FA Depreciation Book"."Depreciation Method")
                {
                }
                column(DepreciationStartingDate_FADepreciationBook; "FA Depreciation Book"."Depreciation Starting Date")
                {
                }
                column(AcquisitionCost_FADepreciationBook; "FA Depreciation Book"."Acquisition Cost")
                {
                }
                column(FAPostingGroup_FADepreciationBook; "FA Depreciation Book"."FA Posting Group")
                {
                }
                column(EndingBookValue_FADepreciationBook; "FA Depreciation Book"."Ending Book Value")
                {
                }
                column(BookValue_FADepreciationBook; "FA Depreciation Book"."Book Value")
                {
                }
                column(SalvageValue_FADepreciationBook; "FA Depreciation Book"."Salvage Value")
                {
                }
                column(AcquisitionDate_FADepreciationBook; "FA Depreciation Book"."Acquisition Date")
                {
                }
                column(NoofDepreciationYears_FADepreciationBook; "FA Depreciation Book"."No. of Depreciation Years")
                {
                }
                column(DisposalDate_FADepreciationBook; "FA Depreciation Book"."Disposal Date")
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                Clear(FADeprBook);
                PrintFA := false;
                if not FADeprBook.Get("No.", DeprBookCode) then begin
                    if FAWithoutAcqDate then
                        PrintFA := true;
                end else begin
                    if FADeprBook."Acquisition Date" = 0D then begin
                        if FAWithoutAcqDate then
                            PrintFA := true;
                    end else
                        PrintFA := (FADeprBook."Acquisition Date" >= StartingDate) and
                          (FADeprBook."Acquisition Date" <= EndingDate);
                end;
                if not PrintFA then
                    CurrReport.Skip;
            end;

        }
    }

    requestpage
    {

        SaveValues = true;

        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(DeprBookCode; DeprBookCode)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Depreciation Book';
                        TableRelation = "Depreciation Book";
                    }
                    group("Acquisition Period")
                    {
                        Caption = 'Acquisition Period';
                        field(StartingDate; StartingDate)
                        {
                            ApplicationArea = Basic;
                            Caption = 'Starting Date';
                        }
                        field(EndingDate; EndingDate)
                        {
                            ApplicationArea = Basic;
                            Caption = 'Ending Date';
                        }
                    }
                    field(FAWithoutAcqDate; FAWithoutAcqDate)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Include Fixed Assets Not Yet Acquired';
                    }
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }

        trigger OnOpenPage()
        begin
            if DeprBookCode = '' then begin
                FASetup.Get;
                DeprBookCode := FASetup."Default Depr. Book";
            end;
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        FAGenReport.AppendFAPostingFilter("Fixed Asset", StartingDate, EndingDate);
        FAFilter := "Fixed Asset".GetFilters;
        DeprBookText := StrSubstNo('%1%2 %3', DeprBook.TableCaption, ':', DeprBookCode);
        ValidateDates(StartingDate, EndingDate);
        FAGenReport.ValidateDates(StartingDate, EndingDate);
        ;
        ReportsForNavPre;
    end;

    var
        FASetup: Record "FA Setup";
        DeprBook: Record "Depreciation Book";
        FADeprBook: Record "FA Depreciation Book";
        FAGenReport: Codeunit "FA General Report";
        DeprBookCode: Code[10];
        DeprBookText: Text[50];
        FAFilter: Text;
        StartingDate: Date;
        EndingDate: Date;
        FAWithoutAcqDate: Boolean;
        PrintFA: Boolean;
        Text001: label 'You must specify a Starting Date.';
        Text002: label 'You must specify an Ending Date.';
        Text003: label 'You must specify an Ending Date that is later than the Starting Date.';
        FixedAssetAcqListCptnLbl: label 'Fixed Asset - Acquisition List';
        CurrReportPageNoCaptionLbl: label 'Page';
        FADeprBkAcquisitionDtCptnLbl: label 'Acquisition Date';

    local procedure ValidateDates(StartingDate: Date; EndingDate: Date)
    begin
        if StartingDate = 0D then
            Error(Text001);
        if EndingDate = 0D then
            Error(Text002);
        if StartingDate > EndingDate then
            Error(Text003);
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516944_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
