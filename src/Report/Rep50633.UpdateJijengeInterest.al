#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport50023_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50633 "Update Jijenge Interest"
{
    RDLCLayout = 'Layouts/UpdateJijengeInterest.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Loans Register"; "Loans Register")
        {
            DataItemTableView = where("Outstanding Balance" = filter(> 1), "Loan Product Type" = filter('304'));
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            trigger OnAfterGetRecord();
            begin
                FnAccrueInterestOneOffLoans("Loan  No.");
                FnProductSource("Loan Product Type");
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        VarLineNo: Integer;
        SFactory: Codeunit "SURESTEP Factory";

    local procedure FnAccrueInterestOneOffLoans(VarLoanNo: Code[30])
    var
        ObjLoans: Record "Loans Register";
        ObjInterestLedger: Record "Interest Due Ledger Entry";
    begin
        ObjLoans.Reset;
        ObjLoans.SetRange("Loan  No.", VarLoanNo);
        ObjLoans.SetRange("OneOff Loan Repayment", true);
        if ObjLoans.FindSet then begin
            ObjLoans.CalcFields(ObjLoans."Outstanding Balance");
            ObjInterestLedger.Reset;
            ObjInterestLedger.SetCurrentkey(ObjInterestLedger."Entry No.");
            if ObjInterestLedger.FindLast then
                VarLineNo := ObjInterestLedger."Entry No." + 1;
            ObjInterestLedger.Init;
            ObjInterestLedger."Journal Batch Name" := 'INTRESTDUE';
            ObjInterestLedger."Entry No." := VarLineNo;
            ObjInterestLedger."Customer No." := ObjLoans."Client Code";
            ObjInterestLedger."Transaction Type" := ObjInterestLedger."transaction type"::"Interest Due";
            ObjInterestLedger."Document No." := SFactory.FnRunGetNextTransactionDocumentNo;
            ObjInterestLedger."Posting Date" := CalcDate(ObjLoans."Instalment Period", ObjLoans."Loan Disbursement Date");
            ObjInterestLedger.Description := ObjLoans."Loan  No." + ' ' + 'Interest charged';
            ObjInterestLedger.Amount := ROUND(ObjLoans."Approved Amount" * (ObjLoans.Interest / 1200), 1, '>') * ObjLoans.Installments;
            if ObjLoans.Source = ObjLoans.Source::" " then begin
                ObjInterestLedger."Global Dimension 2 Code" := ObjLoans."Branch Code";
            end;
            if ObjLoans.Source = ObjLoans.Source::BOSA then begin
                ObjInterestLedger."Global Dimension 2 Code" := ObjLoans."Branch Code";
            end;
            ObjInterestLedger."Global Dimension 1 Code" := FnProductSource(ObjLoans."Loan Product Type");
            ObjInterestLedger.Validate(ObjInterestLedger."Global Dimension 2 Code");
            ObjInterestLedger.Validate(ObjInterestLedger."Global Dimension 1 Code");
            ObjInterestLedger."Loan No" := ObjLoans."Loan  No.";
            ObjInterestLedger."Interest Accrual Date" := ObjLoans."Loan Disbursement Date";
            if ObjInterestLedger.Amount <> 0 then
                ObjInterestLedger.Insert;
        end;
    end;

    local procedure FnProductSource(Product: Code[50]) Source: Code[50]
    var
        ObjProducts: Record "Loan Products Setup";
    begin
        ObjProducts.Reset;
        ObjProducts.SetRange(ObjProducts.Code, Product);
        if ObjProducts.Find('-') then begin
            if ObjProducts.Source = ObjProducts.Source::BOSA then
                Source := 'BOSA'
            else
                Source := 'FOSA';
        end;
        exit(Source);
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport50023_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
