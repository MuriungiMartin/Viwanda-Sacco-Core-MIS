#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516169_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50169 "HR Employee Requisition"
{
    RDLCLayout = 'Layouts/HREmployeeRequisition.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("HR Employee Requisitions"; "HR Employee Requisitions")
        {
            PrintOnlyIfDetail = true;
            column(ReportForNavId_1102755000; 1102755000) { } // Autogenerated by ForNav - Do not delete
            column(RequisitionNo_HREmployeeRequisitions; "HR Employee Requisitions"."Requisition No.")
            {
                IncludeCaption = true;
            }
            column(JobDescription_HREmployeeRequisitions; "HR Employee Requisitions"."Job Description")
            {
                IncludeCaption = true;
            }
            column(JobGrade_HREmployeeRequisitions; "HR Employee Requisitions"."Job Grade")
            {
                IncludeCaption = true;
            }
            column(GlobalDimension2Code_HREmployeeRequisitions; "HR Employee Requisitions"."Global Dimension 2 Code")
            {
                IncludeCaption = true;
            }
            column(ReasonforRequestOther_HREmployeeRequisitions; "Reason for Request(Other)")
            {
                IncludeCaption = true;
            }
            column(ReasonForRequest_HREmployeeRequisitions; "HR Employee Requisitions"."Reason For Request")
            {
                IncludeCaption = true;
            }
            column(TypeofContractRequired_HREmployeeRequisitions; "HR Employee Requisitions"."Type of Contract Required")
            {
                IncludeCaption = true;
            }
            column(AnyAdditionalInformation_HREmployeeRequisitions; "HR Employee Requisitions"."Any Additional Information")
            {
                IncludeCaption = true;
            }
            column(RequisitionDate_HREmployeeRequisitions; "HR Employee Requisitions"."Requisition Date")
            {
                IncludeCaption = true;
            }
            column(JobSupervisorManager_HREmployeeRequisitions; "HR Employee Requisitions"."Job Supervisor/Manager")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            dataitem("Approval Entry"; "Approval Entry")
            {
                DataItemLink = "Document No." = field("Requisition No.");
                DataItemTableView = sorting("Table ID", "Document Type", "Document No.", "Sequence No.") order(ascending) where(Status = const(Approved));
                column(ReportForNavId_1102755001; 1102755001) { } // Autogenerated by ForNav - Do not delete
                column(Comment_ApprovalEntry; "Approval Entry".Comment)
                {
                    IncludeCaption = true;
                }
                column(ApproverID_ApprovalEntry; "Approval Entry"."Approver ID")
                {
                    IncludeCaption = true;
                }
                column(DateTimeSentforApproval_ApprovalEntry; "Approval Entry"."Date-Time Sent for Approval")
                {
                    IncludeCaption = true;
                }
                column(SenderID_ApprovalEntry; "Approval Entry"."Sender ID")
                {
                    IncludeCaption = true;
                }
                column(LastDateTimeModified_ApprovalEntry; "Approval Entry"."Last Date-Time Modified")
                {
                }
                column(LastModifiedByID_ApprovalEntry; "Approval Entry"."Last Modified By User ID")
                {
                }
                dataitem("User Setup"; "User Setup")
                {
                    DataItemLink = "User ID" = field("Approver ID");
                    DataItemTableView = sorting("User ID") order(ascending);
                    column(ReportForNavId_1102755002; 1102755002) { } // Autogenerated by ForNav - Do not delete
                    column(UserID_UserSetup; "User Setup"."User ID")
                    {
                        IncludeCaption = true;
                    }
                }
            }
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Reset;
        CI.Get();
        CI.CalcFields(CI.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516169_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
