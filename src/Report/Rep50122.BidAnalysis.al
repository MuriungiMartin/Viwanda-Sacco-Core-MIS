#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516122_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50122 "Bid Analysis"
{
    RDLCLayout = 'Layouts/BidAnalysis.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Bid Analysis"; "Bid Analysis")
        {
            RequestFilterFields = "RFQ No.";
            column(ReportForNavId_1102755000; 1102755000) { } // Autogenerated by ForNav - Do not delete
            column(RFQNo_BidAnalysis; "Bid Analysis"."RFQ No.")
            {
            }
            column(QuoteNo_BidAnalysis; "Bid Analysis"."Quote No.")
            {
            }
            column(VendorNo_BidAnalysis; "Bid Analysis"."Vendor No.")
            {
            }
            column(ItemNo_BidAnalysis; "Bid Analysis"."Item No.")
            {
            }
            column(Description_BidAnalysis; "Bid Analysis".Description)
            {
            }
            column(Quantity_BidAnalysis; "Bid Analysis".Quantity)
            {
            }
            column(UnitOfMeasure_BidAnalysis; "Bid Analysis"."Unit Of Measure")
            {
            }
            column(Amount_BidAnalysis; "Bid Analysis".Amount)
            {
            }
            column(LineAmount_BidAnalysis; "Bid Analysis"."Line Amount")
            {
            }
            column(RFQLineNo_BidAnalysis; "Bid Analysis"."RFQ Line No.")
            {
            }
            column(CompanyInfoName; CompanyInfo.Name)
            {
            }
            column(CompanyInfoAddress; CompanyInfo.Address)
            {
            }
            column(CompanyInfoPicture; CompanyInfo.Picture)
            {
            }
            column(LastDirectCost_BidAnalysis; "Bid Analysis"."Last Direct Cost")
            {
            }
            column(Total_BidAnalysis; "Bid Analysis".Total)
            {
            }
            column(Name_Vendor; VendorName)
            {
            }
            column(SelectedVendor; SelectedVendor)
            {
            }
            column(SelectedPrice; SelectedPrice)
            {
            }
            column(TotalPrice; TotalPrice)
            {
            }
            column(SelectedRemarks; SelectedRemarks)
            {
            }
            trigger OnAfterGetRecord();
            begin
                if Vendor.Get("Bid Analysis"."Vendor No.") then
                    VendorName := Vendor.Name;
                BidAnalysis.Reset;
                BidAnalysis.SetRange("RFQ No.", "RFQ No.");
                BidAnalysis.SetRange("RFQ Line No.", "RFQ Line No.");
                BidAnalysis.SetCurrentkey(BidAnalysis."RFQ No.", BidAnalysis."RFQ Line No.", BidAnalysis.Amount);
                if BidAnalysis.FindFirst then begin
                    Vendor.Get(BidAnalysis."Vendor No.");
                    SelectedVendor := Vendor.Name;
                    SelectedPrice := BidAnalysis.Amount;
                    TotalPrice := BidAnalysis.Amount * BidAnalysis.Quantity;
                    SelectedRemarks := BidAnalysis.Remarks;
                end
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompanyInfo.Get;
        CompanyInfo.CalcFields(Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CompanyInfo: Record "Company Information";
        Vendor: Record Vendor;
        BidAnalysis: Record "Bid Analysis";
        SelectedVendor: Text;
        SelectedPrice: Decimal;
        TotalPrice: Decimal;
        VendorName: Text;
        SelectedRemarks: Text;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516122_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
