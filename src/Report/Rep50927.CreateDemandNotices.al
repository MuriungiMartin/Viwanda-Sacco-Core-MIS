#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516927_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50927 "Create Demand Notices"
{
    RDLCLayout = 'Layouts/CreateDemandNotices.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Loans Register"; "Loans Register")
        {
            DataItemTableView = where("Loan  No." = filter(<> 'FLN*'));
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            trigger OnAfterGetRecord();
            begin
                ObjLSchedule.Reset;
                ObjLSchedule.SetRange(ObjLSchedule."Loan No.", "Loan  No.");
                //ObjLSchedule.SETFILTER(ObjLSchedule."Repayment Date",'>=%1',TODAY);
                if ObjLSchedule.FindSet then begin
                    VarAmountInArrears := ObjSurestep.FnGetLoanAmountinArrears("Loan  No.");
                    if VarAmountInArrears > 0 then begin
                        //=============Create 1st Demand Notice======================================================
                        ObjDemands.Reset;
                        ObjDemands.SetRange(ObjDemands."Loan In Default", "Loan  No.");
                        if ObjDemands.Find('-') = false then begin
                            if ObjSaccoNoSeries.Get then begin
                                ObjSaccoNoSeries.TestField(ObjSaccoNoSeries."Demand Notice Nos");
                                VarDocumentNo := ObjNoSeriesMgt.GetNextNo(ObjSaccoNoSeries."Demand Notice Nos", 0D, true);
                                ObjDemands.Init;
                                ObjDemands."Document No" := VarDocumentNo;
                                ObjDemands."Member No" := "Client Code";
                                ObjDemands."Member Name" := "Client Name";
                                ObjDemands."Loan In Default" := "Loan  No.";
                                ObjDemands."Notice Type" := ObjDemands."notice type"::"1st Demand Notice";
                                ObjDemands."Demand Notice Date" := Today;
                                ObjDemands.Insert;
                                ObjDemands.Validate(ObjDemands."Loan In Default");
                                ObjDemands.Modify;
                            end;
                        end;
                        //=============End Create 1st Demand Notice======================================================
                        //=============Create 2nd Demand Notice======================================================
                        ObjDemands.Reset;
                        ObjDemands.SetRange(ObjDemands."Loan In Default", "Loan  No.");
                        ObjDemands.SetFilter(ObjDemands."Notice Type", '<>%1|%2', ObjDemands."notice type"::"Debt Collector Notice", ObjDemands."notice type"::"CRB Notice");
                        if ObjDemands.FindSet then begin
                            if ObjDemands.Count > 1 then begin
                                if ObjSaccoNoSeries.Get then begin
                                    ObjSaccoNoSeries.TestField(ObjSaccoNoSeries."Demand Notice Nos");
                                    VarDocumentNo := ObjNoSeriesMgt.GetNextNo(ObjSaccoNoSeries."Demand Notice Nos", 0D, true);
                                    ObjDemands.Init;
                                    ObjDemands."Document No" := VarDocumentNo;
                                    ObjDemands."Member No" := "Client Code";
                                    ObjDemands."Member Name" := "Client Name";
                                    ObjDemands."Loan In Default" := "Loan  No.";
                                    ObjDemands."Notice Type" := ObjDemands."notice type"::"2nd Demand Notice";
                                    ObjDemands."Demand Notice Date" := Today;
                                    ObjDemands.Insert;
                                    ObjDemands.Validate(ObjDemands."Loan In Default");
                                    ObjDemands.Modify;
                                end;
                            end;
                        end;
                        //=============End Create 2nd Demand Notice======================================================
                        //=============Create CRB Demand Notice======================================================
                        ObjDemands.Reset;
                        ObjDemands.SetRange(ObjDemands."Loan In Default", "Loan  No.");
                        ObjDemands.SetFilter(ObjDemands."Notice Type", '<>%1|%2', ObjDemands."notice type"::"Debt Collector Notice", ObjDemands."notice type"::"CRB Notice");
                        if ObjDemands.FindSet then begin
                            if ObjDemands.Count > 2 then begin
                                if ObjSaccoNoSeries.Get then begin
                                    ObjSaccoNoSeries.TestField(ObjSaccoNoSeries."Demand Notice Nos");
                                    VarDocumentNo := ObjNoSeriesMgt.GetNextNo(ObjSaccoNoSeries."Demand Notice Nos", 0D, true);
                                    ObjDemands.Init;
                                    ObjDemands."Document No" := VarDocumentNo;
                                    ObjDemands."Member No" := "Client Code";
                                    ObjDemands."Member Name" := "Client Name";
                                    ObjDemands."Loan In Default" := "Loan  No.";
                                    ObjDemands."Notice Type" := ObjDemands."notice type"::"CRB Notice";
                                    ObjDemands."Demand Notice Date" := Today;
                                    ObjDemands.Insert;
                                    ObjDemands.Validate(ObjDemands."Loan In Default");
                                    ObjDemands.Modify;
                                end;
                            end;
                        end;
                        //=============End Create CRB Demand Notice======================================================
                    end;
                end;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        VarAmountInArrears: Decimal;
        ObjSurestep: Codeunit "SURESTEP Factory";
        ObjDemands: Record "Default Notices Register";
        ObjSaccoNoSeries: Record "Sacco No. Series";
        VarDocumentNo: Code[20];
        ObjNoSeriesMgt: Codeunit NoSeriesManagement;
        ObjLSchedule: Record "Loan Repayment Schedule";
        VarScheduleDate: Date;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516927_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
