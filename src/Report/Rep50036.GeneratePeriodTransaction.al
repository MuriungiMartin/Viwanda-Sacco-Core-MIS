#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport50036_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50036 "Generate Period Transaction"
{
    RDLCLayout = 'Layouts/GeneratePeriodTransaction.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Members Register"; "Members Register")
        {
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            trigger OnPreDataItem();
            begin
                /*//CustAmount.DELETEALL;
				VarDateFilter:='..'+FORMAT(VarReportStartDate);
				ObjMembers.CALCFIELDS(ObjMembers."Current Shares");
				ObjMembers.RESET;
				ObjMembers.SETFILTER(ObjMembers."Date Filter",VarDateFilter);
				ObjMembers.SETFILTER(ObjMembers."Current Shares",'<>%1',0);
				IF ObjMembers.FINDSET THEN
				  BEGIN
					REPEAT
					ObjMembers.CALCFIELDS(ObjMembers."Current Shares");
					//MESSAGE(FORMAT(ObjMembers."Current Shares"));
					CustAmount.INIT;
					CustAmount."Customer No" := ObjMembers."No.";
					CustAmount.Amount := ObjMembers."Current Shares"*-1;
					CustAmount."Amount LCY" := ObjMembers."Current Shares"*-1;
					CustAmount.INSERT;
					UNTIL ObjMembers.NEXT=0;
				  END;
				*/
                VarRank := 0;
                ObjMember.CalcFields(ObjMember."Deposits Contributed Ver1");
                ObjMember.Reset;
                ObjMember.SetCurrentkey(ObjMember."Deposits Contributed Ver1");
                if ObjMember.Find('-') then begin
                    repeat
                        ObjMember.CalcFields(ObjMember."Deposits Contributed Ver1");
                        VarRank := VarRank + 1;
                        VarDepositsSum := VarDepositsSum + ObjMember."Deposits Contributed Ver1";
                        Message('Name is %1 # %2', ObjMember.Name, VarRank);
                    until (ObjMember.Next = 0) or (VarRank = 10);
                    exit;
                end;
                /*
				Cust.RESET;
				Cust.SETCURRENTKEY(Cust.Amount);
				IF Cust.FIND('+') THEN
				BEGIN
				REPEAT
				   Count1:=1;
				   Cust.Rank:=Count1;
				   Cust.MODIFY;
				   Count1:=Count1+1;
				  IF Count1 = 10 THEN
					 EXIT;
				  Cust.NEXT(-1);
				UNTIL Count1 = 10;
				END;
				*/

            end;

            trigger OnAfterGetRecord();
            begin
                /*{"prPeriod Transactions.".Amount:="prPeriod Transactions.".Amount+128;
				"prPeriod Transactions.".MODIFY;}
				"Payroll Employee P9."."Tax Charged":="Payroll Employee P9."."Tax Charged"+128;
				"Payroll Employee P9.".MODIFY;*/

            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        VarDateFilter: Text;
        VarReportStartDate: Date;
        ObjMembers: Record "Members Register";
        CustAmount: Record "Top Depositers";
        ObjTopDepositors: Record "Top Depositers";
        VarRank: Integer;
        Cust: Record "Top Depositers";
        Count1: Integer;
        ObjMember: Record "Members Register";
        VarDepositsSum: Decimal;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport50036_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
