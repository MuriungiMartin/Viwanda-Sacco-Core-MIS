#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516105_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50105 "RFQ Report"
{
    RDLCLayout = 'Layouts/RFQReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Purchase Quote Header"; "Purchase Quote Header")
        {
            column(ReportForNavId_1102755000; 1102755000) { } // Autogenerated by ForNav - Do not delete
            column(No_PurchaseQuoteHeader; "Purchase Quote Header"."No.")
            {
            }
            column(ShiptoCode_PurchaseQuoteHeader; "Purchase Quote Header"."Ship-to Code")
            {
            }
            column(ShiptoName_PurchaseQuoteHeader; "Purchase Quote Header"."Ship-to Name")
            {
            }
            column(ShiptoAddress_PurchaseQuoteHeader; "Purchase Quote Header"."Ship-to Address")
            {
            }
            column(LocationCode_PurchaseQuoteHeader; "Purchase Quote Header"."Location Code")
            {
            }
            column(ShortcutDimension1Code_PurchaseQuoteHeader; "Purchase Quote Header"."Shortcut Dimension 1 Code")
            {
            }
            column(ShortcutDimension2Code_PurchaseQuoteHeader; "Purchase Quote Header"."Shortcut Dimension 2 Code")
            {
            }
            column(PostingDescription_PurchaseQuoteHeader; "Purchase Quote Header"."Posting Description")
            {
            }
            column(ExpectedClosingDate_PurchaseQuoteHeader; "Purchase Quote Header"."Expected Opening Date")
            {
            }
            column(CompayInfoName; CompayInfo.Name)
            {
            }
            column(CompayInfoPicture; CompayInfo.Picture)
            {
            }
            column(PostingDate_PurchaseQuoteHeader; "Purchase Quote Header"."Posting Date")
            {
            }
            column(ReleasedBy_PurchaseQuoteHeader; "Purchase Quote Header"."Released By")
            {
            }
            column(ReleaseDate_PurchaseQuoteHeader; "Purchase Quote Header"."Release Date")
            {
            }
            dataitem("Quotation Request Vendors"; "Quotation Request Vendors")
            {
                DataItemLink = "Document Type" = field("Document Type"), "Requisition Document No." = field("No.");
                column(ReportForNavId_1102755001; 1102755001) { } // Autogenerated by ForNav - Do not delete
                column(VendorNo_QuotationRequestVendors; "Quotation Request Vendors"."Vendor No.")
                {
                }
                column(VendorName_QuotationRequestVendors; "Quotation Request Vendors"."Vendor Name")
                {
                }
                column(VendorAddress; Vendor.Address)
                {
                }
                column(VendorAddress2; Vendor."Address 2")
                {
                }
                trigger OnAfterGetRecord();
                begin
                    Vendor.Get("Quotation Request Vendors"."Vendor No.");
                    ;
                end;

            }
            dataitem("Purchase Quote Line"; "Purchase Quote Line")
            {
                DataItemLink = "Document Type" = field("Document Type"), "Document No." = field("No.");
                column(ReportForNavId_1102755002; 1102755002) { } // Autogenerated by ForNav - Do not delete
                column(Type_PurchaseQuoteLine; "Purchase Quote Line".Type)
                {
                }
                column(No_PurchaseQuoteLine; "Purchase Quote Line"."No.")
                {
                }
                column(Description_PurchaseQuoteLine; "Purchase Quote Line".Description)
                {
                }
                column(UnitofMeasure_PurchaseQuoteLine; "Purchase Quote Line"."Unit of Measure")
                {
                }
                column(Quantity_PurchaseQuoteLine; "Purchase Quote Line".Quantity)
                {
                }
                column(LineNo_PurchaseQuoteLine; "Purchase Quote Line"."Line No.")
                {
                }
                column(DESC2; "Purchase Quote Line"."Description 2")
                {
                }
            }
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompayInfo.Get;
        CompayInfo.CalcFields(CompayInfo.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CompayInfo: Record "Company Information";
        Vendor: Record Vendor;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516105_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
