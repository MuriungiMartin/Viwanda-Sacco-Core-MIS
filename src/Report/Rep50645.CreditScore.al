#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
//50038_v6_3_0_2259) { }
// Autogenerated code - do not delete or modify -->

Report 50645 "Credit Score"
{
    RDLCLayout = 'Layouts/CreditScore.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Customer; Customer)
        {
            DataItemTableView = where("No." = filter('002000001'));
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            trigger OnAfterGetRecord();
            begin
                /*VarDepositInconsistencyStartDateActual:=20180110D;
				VarDepositInconsistencyEndMonth:=CALCDATE('CM',VarDepositInconsistencyStartDateActual);
				REPEAT
					  IF WORKDATE>VarDepositInconsistencyStartDateActual THEN BEGIN
						VarDepositInconsistencyEndMonth:=CALCDATE('CM',VarDepositInconsistencyStartDateActual);
						VarDepositInconsistencyDateFilter:=FORMAT(VarDepositInconsistencyStartDateActual)+'..'+FORMAT(VarDepositInconsistencyEndMonth);
						ObjDetailedLedger.RESET;
						ObjDetailedLedger.SETRANGE(ObjDetailedLedger."Vendor No.","Deposits Account No");
						ObjDetailedLedger.SETFILTER(ObjDetailedLedger."Posting Date",VarDepositInconsistencyDateFilter);
						ObjDetailedLedger.SETFILTER(ObjDetailedLedger."Credit Amount",'<>%1',0);
						IF ObjDetailedLedger.FINDSET THEN BEGIN
						  ObjDetailedLedger.CALCSUMS(ObjDetailedLedger."Credit Amount");
						  VarTotalCredits:=ObjDetailedLedger."Credit Amount";
						  IF VarTotalCredits<Customer."Monthly Contribution" THEN
						  VarDepositInconsistencyCount:=VarDepositInconsistencyCount+1;
						  END;
						  VarTotalCredits:=0;
						  VarDepositInconsistencyStartDateActual:=CALCDATE('1M',VarDepositInconsistencyStartDateActual);
						END;
					  UNTIL VarDepositInconsistencyStartDateActual>=WORKDATE;
					  MESSAGE(FORMAT(VarDepositInconsistencyCount));
					  ObjCreditScoreCriteria.RESET;
					  ObjCreditScoreCriteria.SETRANGE(ObjCreditScoreCriteria.Category,ObjCreditScoreCriteria.Category::"Deposit Inconsistency In A Year");
					  ObjCreditScoreCriteria.SETFILTER(ObjCreditScoreCriteria."Min Count Range",'<=%1',VarDepositInconsistencyCount);
					  ObjCreditScoreCriteria.SETFILTER(ObjCreditScoreCriteria."Max Count Range",'>=%1',VarDepositInconsistencyCount);
					  IF ObjCreditScoreCriteria.FINDSET THEN BEGIN
						ObjMemberCreditScore.INIT;
						ObjMemberCreditScore."Member No":="No.";
						ObjMemberCreditScore."Member Name":=Name;
						ObjMemberCreditScore.Category:=ObjCreditScoreCriteria.Category;
						ObjMemberCreditScore."Score Base Value":=VarDepositInconsistencyCount;
						ObjMemberCreditScore.Score:=ObjCreditScoreCriteria."Risk Score";
						ObjMemberCreditScore."Report Date":=WORKDATE;
						ObjMemberCreditScore.INSERT;
						END;
				*/
                SFactory.FnRunMemberCreditScoring("No.");

            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //:= false;
        end;
    }

    trigger OnInitReport()
    begin
        ;


    end;

    trigger OnPostReport()
    begin
        ;

    end;

    trigger OnPreReport()
    begin
        ;

    end;

    var
        VarDepositInconsistencyStartDateActual: Date;
        VarDepositInconsistencyEndMonth: Date;
        VarDepositInconsistencyDateFilter: Text;
        ObjDetailedLedger: Record "Detailed Vendor Ledg. Entry";
        VarDepositInconsistencyCount: Integer;
        VarTotalCredits: Decimal;
        ObjCreditScoreCriteria: Record "Credit Score Criteria";
        ObjMemberCreditScore: Record "Member Credit Scoring";
        SFactory: Codeunit "SURESTEP Factory";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    //50038_v6_3_0_2259;






    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
