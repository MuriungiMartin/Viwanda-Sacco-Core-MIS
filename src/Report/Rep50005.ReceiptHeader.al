#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516005_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50005 "Receipt Header"
{
    RDLCLayout = 'Layouts/ReceiptHeader.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Receipt Header"; "Receipt Header")
        {
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            column(No; "Receipt Header"."No.")
            {
            }
            column(Date; "Receipt Header"."Posting Date")
            {
            }
            column(TimePosted_ReceiptHeader; "Receipt Header"."Time Posted")
            {
            }
            column(Department; "Receipt Header"."Global Dimension 1 Code")
            {
            }
            column(CostCenter; "Receipt Header"."Global Dimension 2 Code")
            {
            }
            column(RHAmount; "Receipt Header"."Amount Received(LCY)")
            {
            }
            column(RHAmountLCY; "Receipt Header"."Total Amount")
            {
            }
            column(RHDescription; "Receipt Header"."Received From")
            {
            }
            column(RHDesc; "Receipt Header".Description)
            {
            }
            column(Payee; "Receipt Header"."On Behalf of")
            {
            }
            column(TotalAmount; TotalAmount)
            {
            }
            column(TotalAmountText; TotalAmountText[1])
            {
            }
            column(USERID_Control1102755012; UserId)
            {
            }
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            dataitem("Receipt Line"; "Receipt Line")
            {
                DataItemLink = "Document No" = field("No.");
                column(ReportForNavId_11; 11) { } // Autogenerated by ForNav - Do not delete
                column(no_1; "Receipt Line"."Account Code")
                {
                }
                column(Name; "Receipt Line"."Account Name")
                {
                }
                column(TType; "Receipt Line"."Transaction Type")
                {
                }
                column(Description; "Receipt Line".Description)
                {
                }
                column(Amount; "Receipt Line".Amount)
                {
                }
                column(AmountLCY; "Receipt Line"."Amount(LCY)")
                {
                }
                column(PayMode; "Receipt Line"."Pay Mode")
                {
                }
                column(ChequeNo; "Receipt Line"."Cheque No")
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                CalcFields("Receipt Header"."Total Amount");
                EnglishLanguageCode := 1033;
                CheckReport.InitTextVariable();
                CheckReport.FormatNoText(TotalAmountText, ("Receipt Header"."Total Amount"), '');
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Get;
        CI.CalcFields(CI.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";
        CheckReport: Report Check;
        TotalLegalFee: Decimal;
        TotalMembershipFee: Decimal;
        TotalAmount: Decimal;
        TotalInvestment: Decimal;
        TotalAmountText: array[2] of Text[80];
        TotalInvestmentText: array[2] of Text[80];
        Percentage: Decimal;
        Interest: Decimal;
        InterestText: array[2] of Text;
        user: Record User;
        userid: Text;
        EnglishLanguageCode: Integer;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516005_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
