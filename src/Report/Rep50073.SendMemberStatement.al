Report 50073 "Send Member Statement"
{
    RDLCLayout = 'Layouts/SendMemberStatement.rdlc';
    DefaultLayout = RDLC;
    ApplicationArea = all;
    UsageCategory = ReportsAndAnalysis;


    dataset
    {
        dataitem("Members Register"; Customer)
        {
            RequestFilterFields = "No.", "Date Filter";
            trigger OnAfterGetRecord();
            begin
                VarReportStartDate := "Members Register".GetRangeMin("Members Register"."Date Filter");
                VarReportToDate := "Members Register".GetRangemax("Members Register"."Date Filter");
                VarDateFilter := "Members Register".GetFilter("Members Register"."Date Filter");
                ObjMember.Reset;
                ObjMember.SetRange(ObjMember."No.", "Members Register"."No.");
                ObjMember.SetRange(ObjMember."Email Indemnified", true);
                if ObjMember.FindSet then begin
                    SMTPSetup.Get;
                    Filename := '';
                    FilePath := '';
                    Filename := 'Member Account Statement - ' + ObjVendor."No." + '.pdf';
                    FilePath := SMTPSetup."Path to Save Report" + Filename;
                    Report.SaveAsPdf(Report::"Member Account Statement(Ver1)", FilePath, ObjMember);
                    VarMemberEmail := ObjMember."E-Mail";
                    VarMailSubject := 'Member Account Statement: ' + ObjMember."No." + ' - ' +
                    Format(VarReportStartDate, 0, '<Day,2> <Month Text,3> <Year4>') + ' to ' +
                    Format(VarReportToDate, 0, '<Day,2> <Month Text,3> <Year4>');
                    VarMailBody := 'Kindly find attached your Member Account Statement for the period ' +
                    Format(VarReportStartDate, 0, '<Day,2> <Month Text,3> <Year4>') + ' to ' +
                    Format(VarReportToDate, 0, '<Day,2> <Month Text,3> <Year4>') + '. You can save, view or print the statement at your convenience.';
                    SFactory.FnSendStatementViaMail(ObjMember.Name, VarMailSubject, VarMailBody, VarMemberEmail, Filename, '');
                    Message('The Statement for Member No. ' + ObjMember."No." + ' has successfully been sent to ' + VarMemberEmail + '.');
                end else
                    Message('The Email ' + VarMemberEmail + ' for Member No ' + ObjMember."No." + ' is not indemnified');
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
        end;
    }

    trigger OnInitReport()
    begin
        ;

    end;

    trigger OnPostReport()
    begin
        ;
    end;

    trigger OnPreReport()
    begin
        ;
    end;

    var
        VarReportStartDate: Date;
        VarDateFilter: Text;
        ObjVendor: Record Vendor;
        Filename: Text;
        FilePath: Text;
        VarMemberEmail: Text;
        VarMailSubject: Text;
        VarMailBody: Text;
        SFactory: Codeunit "SURESTEP Factory";
        SMTPSetup: Record "SMTP Mail Setup";
        VarReportToDate: Date;
        ObjMember: Record "Members Register";

    // --> Reports ForNAV Autogenerated code - do not delete or modify

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
