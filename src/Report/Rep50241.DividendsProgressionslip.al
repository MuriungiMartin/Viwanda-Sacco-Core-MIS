#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516241_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50241 "Dividends Progressionslip"
{
    RDLCLayout = 'Layouts/DividendsProgressionslip.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Members Register"; "Members Register")
        {
            DataItemTableView = sorting("No.") where("Customer Type" = const(Member));
            RequestFilterFields = "No.";
            column(ReportForNavId_7301; 7301) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(CurrReport_PAGENO; Format(ReportForNav.PageNo))
            {
            }
            column(UserId; UserId)
            {
            }
            column(Members__No__; "Members Register"."No.")
            {
            }
            column(Members__Payroll_Staff_No_; "Members Register"."Payroll No")
            {
            }
            column(Members_Name; "Members Register".Name)
            {
            }
            column(IDNo_MembersRegister; "Members Register"."ID No.")
            {
            }
            column(Dividends_ProgressionCaption; Dividends_ProgressionCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Members__No__Caption; FieldCaption("No."))
            {
            }
            column(Members__Payroll_Staff_No_Caption; FieldCaption("Payroll No"))
            {
            }
            column(Members_NameCaption; FieldCaption(Name))
            {
            }
            column(Dividends_Progression_SharesCaption; "Dividends Progression".FieldCaption(Shares))
            {
            }
            column(Dividends_Progression__Qualifying_Shares_Caption; "Dividends Progression".FieldCaption("Qualifying Shares"))
            {
            }
            column(Dividends_Progression__Net_Dividends_Caption; "Dividends Progression".FieldCaption("Net Dividends"))
            {
            }
            column(Dividends_Progression__Witholding_Tax_Caption; "Dividends Progression".FieldCaption("Witholding Tax"))
            {
            }
            column(Dividends_Progression__Gross_Dividends_Caption; "Dividends Progression".FieldCaption("Gross Dividends"))
            {
            }
            column(Dividends_Progression_DateCaption; "Dividends Progression".FieldCaption(Date))
            {
            }
            column(Company_Name; Company.Name)
            {
            }
            column(Company_Address; Company.Address)
            {
            }
            column(Company_Address_2; Company."Address 2")
            {
            }
            column(Company_Phone_No; Company."Phone No.")
            {
            }
            column(Company_Fax_No; Company."Fax No.")
            {
            }
            column(Company_Picture; Company.Picture)
            {
            }
            column(Company_Email; Company."E-Mail")
            {
            }
            column(DividendPercentage; "VarDivided%")
            {
            }
            column(InterestPercentage; "VarInterest%")
            {
            }
            column(WithTaxPercentage; "VarWithTax%")
            {
            }
            dataitem("Dividends Progression"; "Dividends Progression")
            {
                DataItemLink = "Member No" = field("No.");
                DataItemTableView = sorting(Date);
                column(ReportForNavId_2020; 2020) { } // Autogenerated by ForNav - Do not delete
                column(Dividends_Progression_Date; Format(Date))
                {
                }
                column(Dividends_Progression__Gross_Dividends_; "Dividends Progression"."Gross Dividends")
                {
                }
                column(Dividends_Progression__Witholding_Tax_; "Dividends Progression"."Witholding Tax")
                {
                }
                column(Dividends_Progression__Net_Dividends_; ROUND("Net Dividends", 1, '<'))
                {
                }
                column(Dividends_Progression__Qualifying_Shares_; ROUND("Qualifying Shares", 1, '<'))
                {
                }
                column(Dividends_Progression_Shares; "Dividends Progression".Shares)
                {
                }
                column(Dividends_Progression__Net_Dividends__Control1000000026; "Dividends Progression"."Net Dividends")
                {
                }
                column(Dividends_Progression__Witholding_Tax__Control1000000027; "Dividends Progression"."Witholding Tax")
                {
                }
                column(Dividends_Progression__Gross_Dividends__Control1000000028; "Dividends Progression"."Gross Dividends")
                {
                }
                column(Dividends_Progression__Qualifying_Shares__Control1000000029; "Dividends Progression"."Qualifying Shares")
                {
                }
                column(Dividends_Progression_Shares_Control1000000030; "Dividends Progression".Shares)
                {
                }
                column(Dividends_Progression_Member_No; "Dividends Progression"."Member No")
                {
                }
                column(QualifyingShareCapital_DividendsProgression; "Dividends Progression"."Qualifying Share Capital")
                {
                }
                column(ShareCapital_DividendsProgression; "Dividends Progression"."Share Capital")
                {
                }
                column(GrossInterestOnDeposit_DividendsProgression; "Dividends Progression"."Gross Interest On Deposit")
                {
                }
                column(TotalGrossDividend; ROUND("Dividends Progression"."Gross Interest On Deposit" + "Gross Dividends", 1, '<'))
                {
                }
                dataitem("Sacco General Set-Up"; "Sacco General Set-Up")
                {
                    column(ReportForNavId_1000000024; 1000000024) { } // Autogenerated by ForNav - Do not delete
                    column(Dividend_Percentage; "Sacco General Set-Up"."Dividend (%)")
                    {
                    }
                    column(Interest_on_Deposits; "Sacco General Set-Up"."Interest on Deposits (%)")
                    {
                    }
                    column(Withholding_Tax; "Sacco General Set-Up"."Withholding Tax (%)")
                    {
                    }
                }
            }
            trigger OnPreDataItem();
            begin
                Company.Get();
                Company.CalcFields(Company.Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                ObjGensetup.Get();
                "VarDivided%" := ObjGensetup."Dividend (%)";
                "VarInterest%" := ObjGensetup."Interest on Deposits (%)";
                "VarWithTax%" := ObjGensetup."Withholding Tax (%)";
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        Dividends_ProgressionCaptionLbl: label 'Dividends Progression';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Company: Record "Company Information";
        "VarInterest%": Decimal;
        "VarDivided%": Decimal;
        ObjGensetup: Record "Sacco General Set-Up";
        "VarWithTax%": Decimal;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516241_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
