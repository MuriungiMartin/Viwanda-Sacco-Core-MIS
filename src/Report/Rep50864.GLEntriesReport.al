#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516864_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50864 "G/L Entries Report"
{
    RDLCLayout = 'Layouts/GLEntriesReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("G/L Entry"; "G/L Entry")
        {
            RequestFilterFields = "Posting Date", "User ID", "Document No.", Amount;
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(Name; CompanyInfo.Name)
            {
            }
            column(Address; CompanyInfo.Address)
            {
            }
            column(Picture; CompanyInfo.Picture)
            {
            }
            column(CreditAmount_GLEntry; "G/L Entry"."Credit Amount")
            {
            }
            column(DebitAmount_GLEntry; "G/L Entry"."Debit Amount")
            {
            }
            column(Description_GLEntry; "G/L Entry".Description)
            {
            }
            column(PostingDate_GLEntry; "G/L Entry"."Posting Date")
            {
            }
            column(GLAccountName_GLEntry; "G/L Entry"."G/L Account Name")
            {
            }
            column(GLAccountNo_GLEntry; "G/L Entry"."G/L Account No.")
            {
            }
            column(SourceType_GLEntry; "G/L Entry"."Source Type")
            {
            }
            column(UserID_GLEntry; "G/L Entry"."User ID")
            {
            }
            column(SourceCode_GLEntry; "G/L Entry"."Source Code")
            {
            }
            column(SourceNo_GLEntry; "G/L Entry"."Source No.")
            {
            }
            column(CreatedTime; CreatedTime)
            {
            }
            column(Contacts; CompanyInfo."Phone No.")
            {
            }
            column(ComputerName; ComputerName)
            {
            }
            column(UserId; UserId)
            {
            }
            column(DocumentNo_GLEntry; "G/L Entry"."Document No.")
            {
            }
            trigger OnAfterGetRecord();
            begin
                ComputerName := '';
                // ObjGlregister.RESET;
                // ObjGlregister.SETRANGE(ObjGlregister."No.","G/L Entry"."Entry No.");
                // IF ObjGlregister.FIND('-') THEN
                //CreatedTime:=ObjGlregister."Creation Time";
                // IF "G/L Entry"."Source Type"="G/L Entry"."Source Type"::"Bank Account"
                // THEN ComputerName:="Bank Account Ledger Entry"."Computer Name"
                // ELSE IF   "G/L Entry"."Source Type"="G/L Entry"."Source Type"::"6" THEN
                // ComputerName:="Member Ledger Entry"."Computer Name"
                // ELSE IF "G/L Entry"."Source Type"="G/L Entry"."Source Type"::Vendor THEN
                // ComputerName:="Vendor Ledger Entry"."Computer Name";
                case "G/L Entry"."Source Type" of
                    // Bank Account
                    "G/L Entry"."source type"::"Bank Account":
                        begin
                            BankALEntry.Reset;
                            BankALEntry.SetRange("Document No.", "G/L Entry"."Document No.");
                            if BankALEntry.FindFirst then begin
                                ComputerName := BankALEntry."Computer Name";
                            end;
                        end;
                    //  //Member
                    "G/L Entry"."source type"::Member:
                        begin
                            MemberLedgerEntry.Reset;
                            MemberLedgerEntry.SetRange("Document No.", "G/L Entry"."Document No.");
                            if MemberLedgerEntry.FindFirst then begin
                                ComputerName := MemberLedgerEntry."Computer Name";
                            end;
                        end;
                    //Vendor
                    "G/L Entry"."source type"::Vendor:
                        begin
                            VendorLedgerEntry.Reset;
                            VendorLedgerEntry.SetRange("Document No.", "G/L Entry"."Document No.");
                            if VendorLedgerEntry.FindFirst then begin
                                ComputerName := VendorLedgerEntry."Computer Name";
                            end;
                        end;
                end;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompanyInfo.Get();
        CompanyInfo.CalcFields(CompanyInfo.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CompanyInfo: Record "Company Information";
        ObjGlregister: Record "G/L Register";
        CreatedTime: Time;
        ComputerName: Text;
        BankALEntry: Record "Bank Account Ledger Entry";
        MemberLedgerEntry: Record "Member Ledger Entry";
        VendorLedgerEntry: Record "Vendor Ledger Entry";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516864_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
