#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 //  settings

Report 50483 "Closed Accounts Report"
{
    RDLCLayout = 'Layouts/ClosedAccountsReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Membership Exist"; "Membership Exist")
        {
            DataItemTableView = where(Posted = const(true));
            PrintOnlyIfDetail = false;
            RequestFilterFields = "Closing Date", "Member No.";

            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(Company_Name; Company.Name)
            {
            }
            column(Company_Address; Company.Address)
            {
            }
            column(Company_Address_2; Company."Address 2")
            {
            }
            column(Company_Phone_No; Company."Phone No.")
            {
            }
            column(Company_Fax_No; Company."Fax No.")
            {
            }
            column(Company_Picture; Company.Picture)
            {
            }
            column(Company_Email; Company."E-Mail")
            {
            }

            column(SN; SN)
            {
            }
            column(ModeOfDisbursement_MembershipExist; "Membership Exist"."Mode Of Disbursement")
            {
            }
            column(ClosedBy_MembershipExist; "Membership Exist"."Closed By")
            {
            }
            column(PostingDate_MembershipExist; "Membership Exist"."Posting Date")
            {
            }
            column(ShareCapitalTransferFee_MembershipExist; "Membership Exist"."Share Capital Transfer Fee")
            {
            }
            column(ReasonForWithdrawal_MembershipExist; "Membership Exist"."Reason For Withdrawal")
            {
            }
            column(NetPayabletotheMember_MembershipExist; "Membership Exist"."Net Payable to the Member")
            {
            }
            column(FOSAAccountNo_MembershipExist; "Membership Exist"."FOSA Account No.")
            {
            }
            column(MemberName_MembershipExist; "Membership Exist"."Member Name")
            {
            }
            column(MemberNo_MembershipExist; "Membership Exist"."Member No.")
            {
            }
            column(ClosureType_MembershipExist; "Membership Exist"."Closure Type")
            {
            }
            column(ExitType_MembershipExist; "Membership Exist"."Exit Type")
            {
            }
            dataitem("Members Register"; "Members Register")
            {
                DataItemLink = "No." = field("Member No.");

                column(CurrentShares_MembersRegister; "Members Register"."Current Shares")
                {
                }
                column(CurrentSavings_MembersRegister; "Members Register"."Current Savings")
                {
                }
                column(SharesRetained_MembersRegister; "Members Register"."Shares Retained")
                {
                }
            }
            dataitem(Vendor; Vendor)
            {
                DataItemLink = "BOSA Account No" = field("Member No.");

                column(Balance_Vendor; Vendor.Balance)
                {
                }
                column(No_Vendor; Vendor."No.")
                {
                }
                column(AccountType_Vendor; Vendor."Account Type")
                {
                }
                column(Status_Vendor; Vendor.Status)
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                SN := SN + 1;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin

        end;
    }

    trigger OnInitReport()
    begin
        Company.Get();
        Company.CalcFields(Company.Picture);
        ;


    end;

    trigger OnPostReport()
    begin
        ;

    end;

    trigger OnPreReport()
    begin
        ;

    end;

    var
        Accname: Code[40];
        SN: Integer;
        Company: Record "Company Information";
        Amount: Decimal;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var

}
