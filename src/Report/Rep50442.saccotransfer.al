#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516442_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50442 "sacco transfer"
{
    RDLCLayout = 'Layouts/saccotransfer.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Sacco Transfers"; "Sacco Transfers")
        {
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(CompanyInfo_Name; CompanyInfo.Name)
            {
            }
            column(CompanyInfo_Picture; CompanyInfo.Picture)
            {
            }
            column(CompanyInfo_Address; CompanyInfo.Address)
            {
            }
            column(No_SaccoTransfers; "Sacco Transfers".No)
            {
            }
            column(TransactionDate_SaccoTransfers; Format("Sacco Transfers"."Transaction Date"))
            {
            }
            column(TransactionTime_SaccoTransfers; Format("Sacco Transfers"."Created By"))
            {
            }
            column(ScheduleTotal_SaccoTransfers; "Sacco Transfers"."Schedule Total")
            {
            }
            column(Approved_SaccoTransfers; "Sacco Transfers".Approved)
            {
            }
            column(ApprovedBy_SaccoTransfers; "Sacco Transfers"."Approved By")
            {
            }
            column(Posted_SaccoTransfers; "Sacco Transfers".Posted)
            {
            }
            column(NoSeries_SaccoTransfers; "Sacco Transfers"."No. Series")
            {
            }
            column(ResponsibilityCenter_SaccoTransfers; "Sacco Transfers"."Responsibility Center")
            {
            }
            column(Remarks_SaccoTransfers; "Sacco Transfers"."Transaction Description")
            {
            }
            column(SourceAccountType_SaccoTransfers; "Sacco Transfers"."Source Account Type")
            {
            }
            column(SourceAccountNo_SaccoTransfers; "Sacco Transfers"."Source Account No.")
            {
            }
            column(SourceTransactionType_SaccoTransfers; "Sacco Transfers"."Source Transaction Type")
            {
            }
            column(SourceAccountName_SaccoTransfers; "Sacco Transfers"."Source Account Name")
            {
            }
            column(SourceLoanNo_SaccoTransfers; "Sacco Transfers"."Source Loan No")
            {
            }
            column(Time_Caption; Time_CaptionLbl)
            {
            }
            column(Date_Caption; Date_CaptionLbl)
            {
            }
            column(NumberText_1_; NumberText[1])
            {
            }
            dataitem("Sacco Transfers Schedule"; "Sacco Transfers Schedule")
            {
                DataItemLink = "No." = field(No);
                column(ReportForNavId_1000000016; 1000000016) { } // Autogenerated by ForNav - Do not delete
                column(No_SaccoTransfersSchedule; "Sacco Transfers Schedule"."No.")
                {
                }
                column(DestinationAccountNo_SaccoTransfersSchedule; "Sacco Transfers Schedule"."Destination Account No.")
                {
                }
                column(DestinationAccountName_SaccoTransfersSchedule; "Sacco Transfers Schedule"."Destination Account Name")
                {
                }
                column(DestinationAccountType_SaccoTransfersSchedule; "Sacco Transfers Schedule"."Destination Account Type")
                {
                }
                column(DestinationType_SaccoTransfersSchedule; "Sacco Transfers Schedule"."Destination Type")
                {
                }
                column(DestinationLoan_SaccoTransfersSchedule; "Sacco Transfers Schedule"."Destination Loan")
                {
                }
                column(Amount_SaccoTransfersSchedule; "Sacco Transfers Schedule".Amount)
                {
                }
                column(Description_SaccoTransfersSchedule; "Sacco Transfers Schedule"."Transaction Description")
                {
                }
                trigger OnPreDataItem();
                begin
                    CompanyInfo.Get();
                    CompanyInfo.CalcFields(CompanyInfo.Picture);
                end;

                trigger OnAfterGetRecord();
                begin
                    CheckReport.InitTextVariable();
                    CheckReport.FormatNoText(NumberText, Amount, ' ');
                end;

            }
            trigger OnPreDataItem();
            begin
                CompanyInfo.Get();
                CompanyInfo.CalcFields(CompanyInfo.Picture);
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        CompanyInfo: Record "Company Information";
        Time_CaptionLbl: label '';
        Date_CaptionLbl: label '';
        CheckReport: Report Check;
        NumberText: array[2] of Text[80];

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516442_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
