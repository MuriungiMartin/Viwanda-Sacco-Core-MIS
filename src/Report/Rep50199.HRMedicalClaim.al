#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516199_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50199 "HR Medical Claim"
{
    RDLCLayout = 'Layouts/HRMedicalClaim.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("HR Medical Claims"; "HR Medical Claims")
        {
            RequestFilterFields = "Member No";
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            column(TotalAmount; TotalAmount)
            {
            }
            column(TotalAmountText; TotalAmountText[1])
            {
            }
            column(USERID_Control1102755012; UserId)
            {
            }
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            column(MemberNo_HRMedicalClaims; "HR Medical Claims"."Member No")
            {
            }
            column(ClaimType_HRMedicalClaims; "HR Medical Claims"."Claim Type")
            {
            }
            column(ClaimDate_HRMedicalClaims; "HR Medical Claims"."Claim Date")
            {
            }
            column(PatientName_HRMedicalClaims; "HR Medical Claims"."Patient Name")
            {
            }
            column(DocumentRef_HRMedicalClaims; "HR Medical Claims"."Document Ref")
            {
            }
            column(DateofService_HRMedicalClaims; "HR Medical Claims"."Date of Service")
            {
            }
            column(AttendedBy_HRMedicalClaims; "HR Medical Claims"."Attended By")
            {
            }
            column(AmountCharged_HRMedicalClaims; "HR Medical Claims"."Amount Charged")
            {
            }
            column(Comments_HRMedicalClaims; "HR Medical Claims".Comments)
            {
            }
            column(ClaimNo_HRMedicalClaims; "HR Medical Claims"."Claim No")
            {
            }
            column(Dependants_HRMedicalClaims; "HR Medical Claims".Dependants)
            {
            }
            column(Status_HRMedicalClaims; "HR Medical Claims".Status)
            {
            }
            column(NoSeries_HRMedicalClaims; "HR Medical Claims"."No. Series")
            {
            }
            column(AmountClaimed_HRMedicalClaims; "HR Medical Claims"."Amount Claimed")
            {
            }
            column(HospitalMedicalCentre_HRMedicalClaims; "HR Medical Claims"."Hospital/Medical Centre")
            {
            }
            column(ClaimLimit_HRMedicalClaims; "HR Medical Claims"."Claim Limit")
            {
            }
            column(UserID_HRMedicalClaims; "HR Medical Claims"."User ID")
            {
            }
            column(Balance_HRMedicalClaims; "HR Medical Claims".Balance)
            {
            }
            column(FOSAAccount_HRMedicalClaims; "HR Medical Claims"."FOSA Account")
            {
            }
            column(BankAccount_HRMedicalClaims; "HR Medical Claims"."Bank Account")
            {
            }
            column(BankName_HRMedicalClaims; "HR Medical Claims"."Bank Name")
            {
            }
            column(ShortcutDimension1Code_HRMedicalClaims; "HR Medical Claims"."Shortcut Dimension 1 Code")
            {
            }
            column(ShortcutDimension2Code_HRMedicalClaims; "HR Medical Claims"."Shortcut Dimension 2 Code")
            {
            }
            column(Posted_HRMedicalClaims; "HR Medical Claims".Posted)
            {
            }
            trigger OnAfterGetRecord();
            begin
                //CALCFIELDS("HR Medical Claims"."Amount Claimed");
                EnglishLanguageCode := 1033;
                CheckReport.InitTextVariable();
                CheckReport.FormatNoText(TotalAmountText, ("HR Medical Claims"."Amount Claimed"), '');
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Get;
        CI.CalcFields(CI.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";
        CheckReport: Report Check;
        TotalLegalFee: Decimal;
        TotalMembershipFee: Decimal;
        TotalAmount: Decimal;
        TotalInvestment: Decimal;
        TotalAmountText: array[2] of Text[80];
        TotalInvestmentText: array[2] of Text[80];
        Percentage: Decimal;
        Interest: Decimal;
        InterestText: array[2] of Text;
        user: Record User;
        userid: Text;
        EnglishLanguageCode: Integer;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516199_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
