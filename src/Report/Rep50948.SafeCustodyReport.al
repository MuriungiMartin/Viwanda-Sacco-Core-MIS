#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
//51516948_v6_3_0_2259) { }
// Autogenerated code - do not delete or modify -->

Report 50948 "Safe Custody Report"
{
    RDLCLayout = 'Layouts/SafeCustodyReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Safe Custody Package Register"; "Safe Custody Package Register")
        {
            PrintOnlyIfDetail = false;
            RequestFilterFields = "Member No", "Package ID", "Package Type";
            column(ReportForNavId_4645; 4645) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(Company_Name; Company.Name)
            {
            }
            column(Company_Address; Company.Address)
            {
            }
            column(Company_Address_2; Company."Address 2")
            {
            }
            column(Company_Phone_No; Company."Phone No.")
            {
            }
            column(Company_Fax_No; Company."Fax No.")
            {
            }
            column(Company_Picture; Company.Picture)
            {
            }
            column(Company_Email; Company."E-Mail")
            {
            }

            column(UserId; UserId)
            {
            }
            column(PackageID_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package ID")
            {
            }
            column(PackageType_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Type")
            {
            }
            column(PackageDescription_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Description")
            {
            }
            column(CustodyPeriod_SafeCustodyPackageRegister; "Safe Custody Package Register"."Custody Period")
            {
            }
            column(ChargeAccount_SafeCustodyPackageRegister; "Safe Custody Package Register"."Charge Account")
            {
            }
            column(MaturityInstruction_SafeCustodyPackageRegister; "Safe Custody Package Register"."Maturity Instruction")
            {
            }
            column(FileSerialNo_SafeCustodyPackageRegister; "Safe Custody Package Register"."File Serial No")
            {
            }
            column(DateLodged_SafeCustodyPackageRegister; Format("Safe Custody Package Register"."Date Lodged"))
            {
            }
            column(MemberNo_SafeCustodyPackageRegister; "Safe Custody Package Register"."Member No")
            {
            }
            column(MemberName_SafeCustodyPackageRegister; "Safe Custody Package Register"."Member Name")
            {
            }
            column(PackageStatus_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Status")
            {
            }
            column(PackageRebookingStatus_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Rebooking Status")
            {
            }
            column(EntryNo; EntryNo)
            {
            }
            column(SafeCustodyFeeCharged_SafeCustodyPackageRegister; "Safe Custody Package Register"."Safe Custody Fee Charged")
            {
            }
            column(PackageRebookedOn_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Rebooked On")
            {
            }
            column(PackageReLodgeFeeCharged_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Re_Lodge Fee Charged")
            {
            }
            column(PackageRebookedBy_SafeCustodyPackageRegister; "Safe Custody Package Register"."Package Rebooked By")
            {
            }
            column(ChargeAccountName_SafeCustodyPackageRegister; "Safe Custody Package Register"."Charge Account Name")
            {
            }
            column(Status_SafeCustodyPackageRegister; "Safe Custody Package Register".Status)
            {
            }
            column(RetrievedAt_SafeCustodyPackageRegister; "Safe Custody Package Register"."Retrieved At")
            {
            }
            column(RetrievedOn_SafeCustodyPackageRegister; "Safe Custody Package Register"."Retrieved On")
            {
            }
            column(RetrievedByCustodian2_SafeCustodyPackageRegister; "Safe Custody Package Register"."Retrieved By (Custodian 2)")
            {
            }
            column(RetrievedByCustodian1_SafeCustodyPackageRegister; "Safe Custody Package Register"."Retrieved By(Custodian 1)")
            {
            }
            column(MaturityDate_SafeCustodyPackageRegister; "Safe Custody Package Register"."Maturity Date")
            {
            }
            column(CollectedAt_SafeCustodyPackageRegister; "Safe Custody Package Register"."Collected At")
            {
            }
            column(CollectedOn_SafeCustodyPackageRegister; "Safe Custody Package Register"."Collected On")
            {
            }
            column(CollectedBy_SafeCustodyPackageRegister; "Safe Custody Package Register"."Collected By")
            {
            }
            column(TimeReleased_SafeCustodyPackageRegister; "Safe Custody Package Register"."Time Released")
            {
            }
            column(DateReleased_SafeCustodyPackageRegister; "Safe Custody Package Register"."Date Released")
            {
            }
            column(ReleasedByCustodian2_SafeCustodyPackageRegister; "Safe Custody Package Register"."Released By(Custodian 2)")
            {
            }
            column(ReleasedByCustodian1_SafeCustodyPackageRegister; "Safe Custody Package Register"."Released By(Custodian 1)")
            {
            }
            column(TimeLodged_SafeCustodyPackageRegister; "Safe Custody Package Register"."Time Lodged")
            {
            }
            column(LodgedByCustodian2_SafeCustodyPackageRegister; "Safe Custody Package Register"."Lodged By(Custodian 2)")
            {
            }
            column(LodgedByCustodian1_SafeCustodyPackageRegister; "Safe Custody Package Register"."Lodged By(Custodian 1)")
            {
            }
            column(TimeReceived_SafeCustodyPackageRegister; "Safe Custody Package Register"."Time Received")
            {
            }
            column(DateReceived_SafeCustodyPackageRegister; "Safe Custody Package Register"."Date Received")
            {
            }
            trigger OnAfterGetRecord();
            begin
                EntryNo := EntryNo + 1;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //:= false;
        end;
    }

    trigger OnInitReport()
    begin
        Company.Get();
        Company.CalcFields(Company.Picture);
        ;


    end;

    trigger OnPostReport()
    begin
        ;

    end;

    trigger OnPreReport()
    begin
        ;

    end;

    var
        Company: Record "Company Information";
        ClosingBalPreviousDay: Decimal;
        TotalDeposits: Decimal;
        TotalWithdrawals: Decimal;
        ClosingBalToday: Decimal;
        GLAccountNo: Code[20];
        VendorPostingGroups: Record "Vendor Posting Group";
        StartDate: Date;
        PreviousDay: Date;
        CurrDate: Date;
        GLAccounts: Record "G/L Account";
        CurrDateFilter: Text;
        PrevDateFilter: Text;
        GLEntry: Record "G/L Entry";
        ASAT: Date;
        TransactedAccounts: Integer;
        GLEntries: Record "G/L Entry";
        VarDepositLimit: Decimal;
        VarWithdrawalLimit: Decimal;
        VarCurrAccountBal: Decimal;
        VarAccountName: Code[50];
        VarAccountType: Code[20];
        ObjVendor: Record Vendor;
        VarDepositCriteriaTrue: Boolean;
        VarWithdrawalCriteriaTrue: Boolean;
        ObjVendorLedg: Record "Vendor Ledger Entry";
        VarDepCount: Integer;
        VarWithCount: Integer;
        EntryNo: Integer;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    //51516948_v6_3_0_2259;






    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
