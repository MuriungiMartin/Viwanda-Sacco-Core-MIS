#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516179_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50179 "HR Transport Allocations"
{
    RDLCLayout = 'Layouts/HRTransportAllocations.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("HR Transport Allocations H"; "HR Transport Allocations H")
        {
            PrintOnlyIfDetail = false;
            RequestFilterFields = "Transport Allocation No", Status;
            column(ReportForNavId_6666; 6666) { } // Autogenerated by ForNav - Do not delete
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            column(AssignedDriver_HRTransportAllocationsH; "HR Transport Allocations H"."Assigned Driver")
            {
                IncludeCaption = true;
            }
            column(DriverName_HRTransportAllocationsH; "HR Transport Allocations H"."Driver Name")
            {
                IncludeCaption = true;
            }
            column(DateofTrip_HRTransportAllocationsH; "HR Transport Allocations H"."Date of Trip")
            {
                IncludeCaption = true;
            }
            column(TransportAllocationNo_HRTransportAllocationsH; "HR Transport Allocations H"."Transport Allocation No")
            {
                IncludeCaption = true;
            }
            column(VehicleRegNumber_HRTransportAllocationsH; "HR Transport Allocations H"."Vehicle Reg Number")
            {
                IncludeCaption = true;
            }
            column(Destinations_HRTransportAllocationsH; "Destination(s)")
            {
                IncludeCaption = true;
            }
            dataitem("HR Transport Allocations"; "HR Transport Allocations")
            {
                DataItemLink = "Allocation No" = field("Transport Allocation No");
                DataItemTableView = sorting("Allocation No", "Requisition No") order(ascending);
                column(ReportForNavId_2575; 2575) { } // Autogenerated by ForNav - Do not delete
                column(EmployeeNo_HRTransportAllocations; "HR Transport Allocations"."Employee No")
                {
                    IncludeCaption = true;
                }
                column(PassengersFullNames_HRTransportAllocations; "HR Transport Allocations"."Passenger/s Full Name/s")
                {
                    IncludeCaption = true;
                }
                column(Dept_HRTransportAllocations; "HR Transport Allocations".Dept)
                {
                    IncludeCaption = true;
                }
                column(From_HRTransportAllocations; "HR Transport Allocations".From)
                {
                    IncludeCaption = true;
                }
                column(To_HRTransportAllocations; "HR Transport Allocations H"."Destination(s)")
                {
                    IncludeCaption = true;
                }
                column(No; No)
                {
                    IncludeCaption = false;
                }
                trigger OnPreDataItem();
                begin
                    Int := 0;
                end;

                trigger OnAfterGetRecord();
                begin
                    Int := Int + 1;
                end;

            }
            trigger OnAfterGetRecord();
            begin
                No := No + 1;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Get();
        CI.CalcFields(CI.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";
        Int: Integer;
        HR_Transport_RequisitionsCaptionLbl: label 'HR Transport Requisitions';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        P_O__BoxCaptionLbl: label 'P.O. Box';
        TRANSPORT_REQUESTCaptionLbl: label 'TRANSPORT REQUEST';
        Travelling_Staff_DetailsCaptionLbl: label 'Travelling Staff Details';
        No: Integer;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516179_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
