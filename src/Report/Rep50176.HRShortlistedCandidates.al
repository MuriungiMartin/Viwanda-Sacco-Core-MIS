#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516176_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50176 "HR Shortlisted Candidates"
{
    RDLCLayout = 'Layouts/HRShortlistedCandidates.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("HR Employee Requisitions"; "HR Employee Requisitions")
        {
            RequestFilterFields = "Requisition No.";
            column(ReportForNavId_5259; 5259) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(CurrReport_PAGENO; Format(ReportForNav.PageNo))
            {
            }
            column(UserId; UserId)
            {
            }
            column(HR_Employee_Requisitions__Requisition_No__; "HR Employee Requisitions"."Requisition No.")
            {
            }
            column(HR_Employee_Requisitions__Requisition_Type_; "HR Employee Requisitions"."Requisition Type")
            {
            }
            column(HR_Employee_Requisitions__Requisition_Date_; "HR Employee Requisitions"."Requisition Date")
            {
            }
            column(HR_Employee_Requisitions__Reason_For_Request_; "HR Employee Requisitions"."Reason For Request")
            {
            }
            column(HR_Employee_Requisitions__Type_of_Contract_Required_; "HR Employee Requisitions"."Type of Contract Required")
            {
            }
            column(HR_Employee_Requisitions_Requestor; "HR Employee Requisitions".Requestor)
            {
            }
            column(HR_Employee_Requisitions__Job_ID_; "HR Employee Requisitions"."Job ID")
            {
            }
            column(HR_Employee_Requisitions__Job_Description_; "HR Employee Requisitions"."Job Description")
            {
            }
            column(HR_Employee_RequisitionsCaption; HR_Employee_RequisitionsCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(HR_Shortlisted_CandidatesCaption; HR_Shortlisted_CandidatesCaptionLbl)
            {
            }
            column(P_O__BoxCaption; P_O__BoxCaptionLbl)
            {
            }
            column(Job_Requisition_DetailsCaption; Job_Requisition_DetailsCaptionLbl)
            {
            }
            column(HR_Employee_Requisitions__Requisition_Type_Caption; FieldCaption("Requisition Type"))
            {
            }
            column(HR_Employee_Requisitions__Requisition_Date_Caption; FieldCaption("Requisition Date"))
            {
            }
            column(HR_Employee_Requisitions__Reason_For_Request_Caption; FieldCaption("Reason For Request"))
            {
            }
            column(HR_Employee_Requisitions__Type_of_Contract_Required_Caption; FieldCaption("Type of Contract Required"))
            {
            }
            column(HR_Employee_Requisitions_RequestorCaption; FieldCaption(Requestor))
            {
            }
            column(HR_Employee_Requisitions__Requisition_No__Caption; FieldCaption("Requisition No."))
            {
            }
            column(HR_Employee_Requisitions__Job_ID_Caption; FieldCaption("Job ID"))
            {
            }
            column(HR_Employee_Requisitions__Job_Description_Caption; FieldCaption("Job Description"))
            {
            }
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            column(CI_EMail; CI."E-Mail")
            {
                IncludeCaption = true;
            }
            column(CI_HomePage; CI."Home Page")
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            dataitem("HR Shortlisted Applicants"; "HR Shortlisted Applicants")
            {
                DataItemLink = "Employee Requisition No" = field("Requisition No.");
                DataItemTableView = sorting("Employee Requisition No", "Job Application No");
                column(ReportForNavId_2704; 2704) { } // Autogenerated by ForNav - Do not delete
                column(HR_Shortlisted_Applicants__Job_Application_No_; "HR Shortlisted Applicants"."Job Application No")
                {
                }
                column(HR_Shortlisted_Applicants__First_Name_; "HR Shortlisted Applicants"."First Name")
                {
                }
                column(HR_Shortlisted_Applicants__Middle_Name_; "HR Shortlisted Applicants"."Middle Name")
                {
                }
                column(HR_Shortlisted_Applicants__Last_Name_; "HR Shortlisted Applicants"."Last Name")
                {
                }
                column(HR_Shortlisted_Applicants__ID_No_; "HR Shortlisted Applicants"."ID No")
                {
                }
                column(HR_Shortlisted_Applicants_Gender; "HR Shortlisted Applicants".Gender)
                {
                }
                column(HR_Shortlisted_Applicants_Qualified; "HR Shortlisted Applicants".Qualified)
                {
                }
                column(HR_Shortlisted_Applicants__Job_Application_No_Caption; FieldCaption("Job Application No"))
                {
                }
                column(HR_Shortlisted_Applicants__Last_Name_Caption; FieldCaption("Last Name"))
                {
                }
                column(HR_Shortlisted_Applicants__First_Name_Caption; FieldCaption("First Name"))
                {
                }
                column(HR_Shortlisted_Applicants__Middle_Name_Caption; FieldCaption("Middle Name"))
                {
                }
                column(HR_Shortlisted_Applicants__ID_No_Caption; FieldCaption("ID No"))
                {
                }
                column(HR_Shortlisted_Applicants_GenderCaption; FieldCaption(Gender))
                {
                }
                column(HR_Shortlisted_Applicants_QualifiedCaption; FieldCaption(Qualified))
                {
                }
                column(Shortlisted_ApplicantsCaption; Shortlisted_ApplicantsCaptionLbl)
                {
                }
                column(HR_Shortlisted_Applicants_Employee_Requisition_No; "HR Shortlisted Applicants"."Employee Requisition No")
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                No := No + 1;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Get();
        CI.CalcFields(CI.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";
        HR_Employee_RequisitionsCaptionLbl: label 'HR Employee Requisitions';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        HR_Shortlisted_CandidatesCaptionLbl: label 'HR Shortlisted Candidates';
        P_O__BoxCaptionLbl: label 'P.O. Box';
        Job_Requisition_DetailsCaptionLbl: label 'Job Requisition Details';
        Shortlisted_ApplicantsCaptionLbl: label 'Shortlisted Applicants';
        No: Integer;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516176_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
