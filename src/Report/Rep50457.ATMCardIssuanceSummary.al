#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516457_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50457 "ATM Card Issuance Summary"
{
    RDLCLayout = 'Layouts/ATMCardIssuanceSummary.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("ATM Card Applications"; "ATM Card Applications")
        {
            column(ReportForNavId_4645; 4645) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(Company_Name; Company.Name)
            {
            }
            column(Company_Address; Company.Address)
            {
            }
            column(Company_Address_2; Company."Address 2")
            {
            }
            column(Company_Phone_No; Company."Phone No.")
            {
            }
            column(Company_Fax_No; Company."Fax No.")
            {
            }
            column(Company_Picture; Company.Picture)
            {
            }
            column(Company_Email; Company."E-Mail")
            {
            }
            column(CurrReport_PAGENO; Format(ReportForNav.PageNo))
            {
            }
            column(UserId; UserId)
            {
            }
            column(VarMonth1MonthYear; VarMonth1MonthYear)
            {
            }
            column(VarMonth2MonthYear; VarMonth2MonthYear)
            {
            }
            column(VarMonth3MonthYear; VarMonth3MonthYear)
            {
            }
            column(VarNairobiMonth1Count; VarNairobiMonth1Count)
            {
            }
            column(VarNairobiMonth2Count; VarNairobiMonth2Count)
            {
            }
            column(VarNairobiMonth3Count; VarNairobiMonth3Count)
            {
            }
            column(VarNaivashaMonth1Count; VarNaivashaMonth1Count)
            {
            }
            column(VarNaivashaMonth2Count; VarNaivashaMonth2Count)
            {
            }
            column(VarNaivashaMonth3Count; VarNaivashaMonth3Count)
            {
            }
            column(VarNakuruMonth1Count; VarNakuruMonth1Count)
            {
            }
            column(VarNakuruMonth2Count; VarNakuruMonth2Count)
            {
            }
            column(VarNakuruMonth3Count; VarNakuruMonth3Count)
            {
            }
            column(VarEldoretMonth1Count; VarEldoretMonth1Count)
            {
            }
            column(VarEldoretMonth2Count; VarEldoretMonth2Count)
            {
            }
            column(VarEldoretMonth3Count; VarEldoretMonth3Count)
            {
            }
            column(VarMombasaMonth1Count; VarMombasaMonth1Count)
            {
            }
            column(VarMombasaMonth2Count; VarMombasaMonth2Count)
            {
            }
            column(VarMombasaMonth3Count; VarMombasaMonth3Count)
            {
            }
            trigger OnPreDataItem();
            begin
                Company.Get();
                Company.CalcFields(Company.Picture);
                VarMonth1DateFilter := Format(VarReportStartDate) + '..' + Format(CalcDate('1M', VarReportStartDate));
                VarMonth2DateFilter := Format(CalcDate('1M', VarReportStartDate)) + '..' + Format(CalcDate('2M', VarReportStartDate));
                VarMonth3DateFilter := Format(CalcDate('2M', VarReportStartDate)) + '..' + Format(CalcDate('3M', VarReportStartDate));
                VarReportDateFilter := Format(VarReportStartDate) + '..' + Format(CalcDate('3M', VarReportStartDate));
                VarMonth1MonthYear := Format(VarReportStartDate, 0, '<Month Text,3> <Year4>');
                VarMonth2MonthYear := Format(CalcDate('1M', VarReportStartDate), 0, '<Month Text,3> <Year4>');
                VarMonth3MonthYear := Format(CalcDate('2M', VarReportStartDate), 0, '<Month Text,3> <Year4>');
                "ATM Card Applications".SetFilter("Date Collected", VarReportDateFilter);
                //====================================================================================================================NAIROBI
                //===============================================Month 1
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAIROBI');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth1DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNairobiMonth1Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 2
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAIROBI');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth2DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNairobiMonth2Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 3
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAIROBI');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth3DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNairobiMonth3Count := ObjATMCardApplications.Count;
                end;
                //====================================================================================================================NAIVASHA
                //===============================================Month 1
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAIVASHA');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth1DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNaivashaMonth1Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 2
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAIVASHA');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth2DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNaivashaMonth2Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 3
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAIVASHA');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth3DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNaivashaMonth3Count := ObjATMCardApplications.Count;
                end;
                //====================================================================================================================NAKURU
                //===============================================Month 1
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAKURU');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth1DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNakuruMonth1Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 2
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAKURU');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth2DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNakuruMonth2Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 3
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'NAKURU');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth3DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarNakuruMonth3Count := ObjATMCardApplications.Count;
                end;
                //====================================================================================================================ELDORET
                //===============================================Month 1
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'ELDORET');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth1DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarEldoretMonth1Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 2
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'ELDORET');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth2DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarEldoretMonth2Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 3
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'ELDORET');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth3DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarEldoretMonth3Count := ObjATMCardApplications.Count;
                end;
                //====================================================================================================================MOMBASA
                //===============================================Month 1
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'MOMBASA');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth1DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarMombasaMonth1Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 2
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'MOMBASA');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth2DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarMombasaMonth2Count := ObjATMCardApplications.Count;
                end;
                //===============================================Month 3
                ObjATMCardApplications.Reset;
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Branch Code", '%1', 'MOMBASA');
                ObjATMCardApplications.SetFilter(ObjATMCardApplications."Date Collected", VarMonth3DateFilter);
                if ObjATMCardApplications.FindSet then begin
                    VarMombasaMonth3Count := ObjATMCardApplications.Count;
                end;
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                field(VarReportStartDate; VarReportStartDate)
                {
                    ApplicationArea = Basic;
                    Caption = 'Report Start Date';
                }
                field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                {
                    ApplicationArea = Basic;
                    Caption = 'Design';
                    Visible = ReportForNavAllowDesign;
                    trigger OnValidate()
                    begin
                        ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                        CurrReport.RequestOptionsPage.Close();
                    end;

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        AsAt: Date;
        Company: Record "Company Information";
        SFactory: Codeunit "SURESTEP Factory";
        ObjGensetup: Record "Sacco General Set-Up";
        CurrReport_PAGENOCaptionLbl: label 'Page';
        RISK_CLASSIFICATION_OF_ASSETS_AND_PROVISIONINGCaptionLbl: label 'RISK CLASSIFICATION OF ASSETS AND PROVISIONING';
        FORM_4CaptionLbl: label 'FORM 4';
        SASRA_2_004CaptionLbl: label 'SASRA 2/004';
        R__46_CaptionLbl: label 'R.(46)';
        ObjMembers: Record "Members Register";
        VarMonth1DateFilter: Text;
        VarMonth2DateFilter: Text;
        VarMonth3DateFilter: Text;
        VarReportStartDate: Date;
        ObjATMCardApplications: Record "ATM Card Applications";
        VarMonth1MonthYear: Text;
        VarMonth2MonthYear: Text;
        VarMonth3MonthYear: Text;
        VarNairobiMonth1Count: Integer;
        VarNairobiMonth2Count: Integer;
        VarNairobiMonth3Count: Integer;
        VarNaivashaMonth1Count: Integer;
        VarNaivashaMonth2Count: Integer;
        VarNaivashaMonth3Count: Integer;
        VarNakuruMonth1Count: Integer;
        VarNakuruMonth2Count: Integer;
        VarNakuruMonth3Count: Integer;
        VarEldoretMonth1Count: Integer;
        VarEldoretMonth2Count: Integer;
        VarEldoretMonth3Count: Integer;
        VarMombasaMonth1Count: Integer;
        VarMombasaMonth2Count: Integer;
        VarMombasaMonth3Count: Integer;
        VarReportDateFilter: Text;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516457_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
