#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516348_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50348 "prP9A.."
{
    RDLCLayout = 'Layouts/prP9A...rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("HR Employees"; "HR Employees")
        {
            PrintOnlyIfDetail = true;
            RequestFilterFields = "No.";
            column(ReportForNavId_8631; 8631) { } // Autogenerated by ForNav - Do not delete
            column(SelectedPeriod; SelectedPeriod)
            {
            }
            column(EmployerPIN; EmployerPIN)
            {
            }
            column(HR_Employee__First_Name_; "HR Employees"."First Name")
            {
            }
            column(HR_Employee__Middle_Name_; "HR Employees"."Middle Name")
            {
            }
            column(HR_Employee__Last_Name_; "HR Employees"."Last Name")
            {
            }
            column(HR_Employee__No__; "HR Employees"."No.")
            {
            }
            column(HR_Employee__PIN_Number_; "HR Employees"."PIN No.")
            {
            }
            column(TotaA; TotaA)
            {
            }
            column(TotalB; TotalB)
            {
            }
            column(totalD; totalD)
            {
            }
            column(totalC; totalC)
            {
            }
            column(TotalF; TotalF)
            {
            }
            column(TotalE3; TotalE3)
            {
            }
            column(TotalE2; TotalE2)
            {
            }
            column(TotalE1; TotalE1)
            {
            }
            column(TotalL; TotalL)
            {
            }
            column(TotalK; TotalK)
            {
            }
            column(TotalJ; TotalJ)
            {
            }
            column(TotalH; TotalH)
            {
            }
            column(TotalG; TotalG)
            {
            }
            column(TotalH_Control1102755001; TotalH)
            {
            }
            column(TotalL_Control1102755005; TotalL)
            {
            }
            column(Employer_s_Name___MESPTCaption; Employer_s_Name___MESPTCaptionLbl)
            {
            }
            column(DOMESTIC_TAXES_DEPARTMENTCaption; DOMESTIC_TAXES_DEPARTMENTCaptionLbl)
            {
            }
            column(TAX_DEDUCTION_CARD_YEAR_Caption; TAX_DEDUCTION_CARD_YEAR_CaptionLbl)
            {
            }
            column(EMPLOYER_S_PINCaption; EMPLOYER_S_PINCaptionLbl)
            {
            }
            column(MONTHCaption; MONTHCaptionLbl)
            {
            }
            column(Basic_SalaryCaption; Basic_SalaryCaptionLbl)
            {
            }
            column(Benefits__Non_CashCaption; Benefits__Non_CashCaptionLbl)
            {
            }
            column(Value_Of__QuartersCaption; Value_Of__QuartersCaptionLbl)
            {
            }
            column(Total__Gross_PayCaption; Total__Gross_PayCaptionLbl)
            {
            }
            column(Defined_Contribution__Retirement_SchemeCaption; Defined_Contribution__Retirement_SchemeCaptionLbl)
            {
            }
            column(Owner_Occupier_InterestCaption; Owner_Occupier_InterestCaptionLbl)
            {
            }
            column(Retirement_Contribution___Owner_OccupierCaption; Retirement_Contribution___Owner_OccupierCaptionLbl)
            {
            }
            column(Column_D_G__Chargeable_AmountCaption; Column_D_G__Chargeable_AmountCaptionLbl)
            {
            }
            column(prEmployee_P9_Info__Tax_Charged_Caption; P9."Tax Charged")
            {
            }
            column(Personal__ReliefCaption; Personal__ReliefCaptionLbl)
            {
            }
            column(prEmployee_P9_Info__Insurance_Relief_Caption; P9."Insurance Relief")
            {
            }
            column(P_A_Y_E__TAXCaption; P_A_Y_E__TAXCaptionLbl)
            {
            }
            column(ECaption; ECaptionLbl)
            {
            }
            column(E1__30_Caption; E1__30_CaptionLbl)
            {
            }
            column(E2__ActualCaption; E2__ActualCaptionLbl)
            {
            }
            column(E3__FIXEDCaption; E3__FIXEDCaptionLbl)
            {
            }
            column(ACaption; ACaptionLbl)
            {
            }
            column(BCaption; BCaptionLbl)
            {
            }
            column(CCaption; CCaptionLbl)
            {
            }
            column(DCaption; DCaptionLbl)
            {
            }
            column(F__Amount_of_InterestCaption; F__Amount_of_InterestCaptionLbl)
            {
            }
            column(G__Lowest_of_E_added_to_FCaption; G__Lowest_of_E_added_to_FCaptionLbl)
            {
            }
            column(HCaption; HCaptionLbl)
            {
            }
            column(JCaption; JCaptionLbl)
            {
            }
            column(V1_162_00Caption; V1_162_00CaptionLbl)
            {
            }
            column(KCaption; KCaptionLbl)
            {
            }
            column(V0Caption; V0CaptionLbl)
            {
            }
            column(LCaption; LCaptionLbl)
            {
            }
            column(Total__Kshs___1_162_00Caption; Total__Kshs___1_162_00CaptionLbl)
            {
            }
            column(Employee_s_MainCaption; Employee_s_MainCaptionLbl)
            {
            }
            column(HR_Employee__Middle_Name_Caption; FieldCaption("Middle Name"))
            {
            }
            column(Personal_File_No_Caption; Personal_File_No_CaptionLbl)
            {
            }
            column(Employee_PINCaption; Employee_PINCaptionLbl)
            {
            }
            column(Tobe_completed_by_Employer_at_end_of_yearCaption; Tobe_completed_by_Employer_at_end_of_yearCaptionLbl)
            {
            }
            column(IMPORTANTCaption; IMPORTANTCaptionLbl)
            {
            }
            // column(DataItem1102756145; NAMES_OF_MORTGAGE_FINANCIAL_INSTITUTION__Lbl)
            // {
            // }
            // column(DataItem1102756146; L_R__No__OF_OWNER_OCCUPIED_HOUSE_______DATE_OF_OCCUPATILbl)
            // {
            // }
            column(DATE_OF_OCCUPATION; DATE_OF_OCCUPATION)
            {
            }
            column(TotalCaption; TotalCaptionLbl)
            {
            }
            column(TOTAL_CHARGEABLE_PAY__COL_h__KshsCaption; TOTAL_CHARGEABLE_PAY__COL_h__KshsCaptionLbl)
            {
            }
            column(TOTAL_CHARGEABLE_PAY__COL_l__KshsCaption; TOTAL_CHARGEABLE_PAY__COL_l__KshsCaptionLbl)
            {
            }
            column(V1__Use_P9ACaption; V1__Use_P9ACaptionLbl)
            {
            }
            column(a__For_all_liable_employees_and_where_director_employee_received_Benefits_in_additions_to_cash_emoluments_Caption; a__For_all_liable_employees_and_where_director_employee_received_Benefits_in_additions_to_cash_emoluments_CaptionLbl)
            {
            }
            column(nextline; Next)
            {
            }
            column(b__Where_an_employee_is_eligible_to_deduction_on_owner_occupier_interest_Caption; b__Where_an_employee_is_eligible_to_deduction_on_owner_occupier_interest_CaptionLbl)
            {
            }
            column(V2___a__Allowable_interest_in_respect_of_any_month_mustnot_exceed_Kshs_12_500___per_year_Caption; V2___a__Allowable_interest_in_respect_of_any_month_mustnot_exceed_Kshs_12_500___per_year_CaptionLbl)
            {
            }
            column(V2___a__Allowable_interest_in_respect_of_any_month_mustnot_exceed_Kshs_12_500___per_year_Caption_Control1102755010; V2___a__Allowable_interest_in_respect_of_any_month_mustnot_exceed_Kshs_12_500___per_year_Caption_Control1102755010Lbl)
            {
            }
            column(See_back_of_this_card_for_further_information_required_by_the_department__Caption; See_back_of_this_card_for_further_information_required_by_the_department__CaptionLbl)
            {
            }
            column(i__Photostat_copy_of_interest_certificate_and_statement_of_account_from_the_Financial_Institution_Caption; i__Photostat_copy_of_interest_certificate_and_statement_of_account_from_the_Financial_Institution_CaptionLbl)
            {
            }
            column(b__AttachCaption; b__AttachCaptionLbl)
            {
            }
            column(ii__THE_DECLARATION_duly_signed_by_the_employee_Caption; ii__THE_DECLARATION_duly_signed_by_the_employee_CaptionLbl)
            {
            }
            dataitem("prEmployee P9 Info"; "prEmployee P9 Info")
            {
                DataItemLink = "Employee Code" = field("No.");
                DataItemTableView = sorting("Employee Code", "Payroll Period") order(ascending);
                column(ReportForNavId_7242; 7242) { } // Autogenerated by ForNav - Do not delete
                column(FORMAT__prEmployee_P9_Info___Payroll_Period__0___Month_Text___; Format(P9."Payroll Period", 0, '<Month Text>'))
                {
                }
                column(prEmployee_P9_Info__Basic_Pay_; "prEmployee P9 Info"."Basic Pay")
                {
                }
                column(prEmployee_P9_Info_Benefits; "prEmployee P9 Info".Benefits)
                {
                }
                column(prEmployee_P9_Info__Value_Of_Quarters_; "prEmployee P9 Info"."Value Of Quarters")
                {
                }
                column(prEmployee_P9_Info__Gross_Pay_; "prEmployee P9 Info"."Gross Pay")
                {
                }
                column(prEmployee_P9_Info__Owner_Occupier_Interest_; "prEmployee P9 Info"."Owner Occupier Interest")
                {
                }
                column(Basic_Pay__0_3; "Basic Pay" * 0.3)
                {
                }
                column(prEmployee_P9_Info_NSSF; "prEmployee P9 Info".NSSF)
                {
                }
                column(fixedDefContri; fixedDefContri)
                {
                }
                column(Gross_Pay__ColG; "Gross Pay" - ColG)
                {
                }
                column(prEmployee_P9_Info__Tax_Charged_; "prEmployee P9 Info"."Tax Charged")
                {
                }
                column(prEmployee_P9_Info__Tax_Relief_; "prEmployee P9 Info"."Tax Relief")
                {
                }
                column(prEmployee_P9_Info__Insurance_Relief_; "prEmployee P9 Info"."Insurance Relief")
                {
                }
                column(prEmployee_P9_Info_PAYE; "prEmployee P9 Info".PAYE)
                {
                }
                column(ColG; ColG)
                {
                }
                column(prEmployee_P9_Info_Employee_Code; "prEmployee P9 Info"."Employee Code")
                {
                }
                column(prEmployee_P9_Info_Payroll_Period; "prEmployee P9 Info"."Payroll Period")
                {
                }
                column(TotalG2; TotalG)
                {
                }
                trigger OnPreDataItem();
                begin
                    SetFilter("Period Year", Format(SelectedPeriod));
                    //new page
                    /*NextPageGroupNo += 1;  */

                end;

                trigger OnAfterGetRecord();
                var
                    prPayrollProcess: Codeunit "Payroll Processing";
                begin
                    //new page
                    /*PageGroupNo := NextPageGroupNo;
					NextPageGroupNo := PageGroupNo + 1;*/
                    if (NSSF) > 20000 then begin
                        ColG := 20000 + "Owner Occupier Interest";
                        TotalG := TotalG + ColG;
                    end
                    else begin
                        ColG := (NSSF) + "Owner Occupier Interest";
                        TotalG := TotalG + ColG;
                    end;

                end;

            }
            trigger OnPreDataItem();
            begin
                if SelectedPeriod = 0 then begin
                    Error('Please enter a Payroll Year');
                end;
                //new page
                /*SETRANGE("No.",empcode);
				PageGroupNo := 1;
				NextPageGroupNo := 1; */
                //SETFILTER("User ID","Employee UserID");

            end;

            trigger OnAfterGetRecord();
            begin
                //SETFILTER(Table55543."User ID","Employee UserID");
                //new page
                /*  */
                TotaA := 0;
                TotalB := 0;
                totalC := 0;
                totalD := 0;
                TotalE1 := 0;
                TotalE2 := 0;
                TotalE3 := 0;
                TotalF := 0;
                TotalG := 0;
                TotalH := 0;
                TotalJ := 0;
                TotalK := 0;
                TotalL := 0;
                P9.Reset;
                P9.SetRange(P9."Employee Code", "No.");
                P9.SetRange(P9."Period Year", SelectedPeriod);
                if P9.Find('-') then begin
                    repeat
                        TotaA := TotaA + P9."Basic Pay";
                        TotalB := TotalB + P9.Benefits;
                        totalC := totalC + P9."Value Of Quarters";
                        totalD := totalD + P9."Gross Pay";
                        TotalE1 := TotalE1 + (P9."Basic Pay" * 0.3);
                        TotalE2 := TotalE2 + (P9.NSSF);
                        TotalE3 := TotalE3 + 20000;
                        TotalF := TotalF + P9."Owner Occupier Interest";
                        if P9.NSSF < 20000 then begin
                            //TotalG:=TotalG+P9.NSSF;
                            TotalH := TotalH + (P9."Gross Pay" - (P9.NSSF));
                        end else begin
                            //TotalG:=TotalG+20000;
                            TotalH := TotalH + (P9."Gross Pay" - 20000);
                        end;
                        TotalJ := TotalJ + P9."Tax Charged";
                        TotalK := TotalK + (P9."Tax Relief" + P9."Insurance Relief");
                        TotalL := TotalL + P9.PAYE;
                    until P9.Next = 0;
                end;
                "Total Tax Charged" := TotalJ;

            end;

        }
    }

    requestpage
    {

        SaveValues = true;

        layout
        {
            area(content)
            {
                group(Period)
                {
                    field("Select Period"; SelectedPeriod)
                    {
                        ApplicationArea = Basic;
                    }
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        if UserSetup.Get(UserId) then begin
            if UserSetup."View Payroll" = false then Error('You dont have permissions for payroll, Contact your system administrator! ')
        end;
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //SelectedPeriod:="prEmployee P9 Info"."Period Year";
        fixedDefContri := 20000;
        ;
        ReportsForNavPre;
    end;

    var
        strEmpName: Text[250];
        strPin: Text[30];
        EmployerPIN: Text[30];
        SelectedPeriod: Integer;
        fixedDefContri: Decimal;
        "Total Tax Charged": Decimal;
        "Total PAYE": Decimal;
        TotaA: Decimal;
        TotalB: Decimal;
        totalC: Decimal;
        totalD: Decimal;
        TotalE1: Decimal;
        TotalE2: Decimal;
        TotalE3: Decimal;
        TotalF: Decimal;
        TotalG: Decimal;
        TotalH: Decimal;
        TotalI: Decimal;
        TotalJ: Decimal;
        TotalK: Decimal;
        TotalL: Decimal;
        P9: Record "prEmployee P9 Info";
        ColG: Decimal;
        Employer_s_Name___MESPTCaptionLbl: label 'Employer''s Name:  AMPATH';
        DOMESTIC_TAXES_DEPARTMENTCaptionLbl: label 'DOMESTIC TAXES DEPARTMENT';
        TAX_DEDUCTION_CARD_YEAR_CaptionLbl: label 'TAX DEDUCTION CARD YEAR:';
        EMPLOYER_S_PINCaptionLbl: label 'EMPLOYER''S PIN';
        MONTHCaptionLbl: label 'MONTH';
        Basic_SalaryCaptionLbl: label 'Basic Salary';
        Benefits__Non_CashCaptionLbl: label 'Benefits\ Non-Cash';
        Value_Of__QuartersCaptionLbl: label 'Value Of\ Quarters';
        Total__Gross_PayCaptionLbl: label 'Total\ Gross Pay';
        Defined_Contribution__Retirement_SchemeCaptionLbl: label 'Defined Contribution\ Retirement Scheme';
        Owner_Occupier_InterestCaptionLbl: label 'Owner Occupier Interest';
        Retirement_Contribution___Owner_OccupierCaptionLbl: label 'Retirement Contribution \ Owner Occupier';
        Column_D_G__Chargeable_AmountCaptionLbl: label 'Column D-G\ Chargeable Amount';
        Personal__ReliefCaptionLbl: label 'Personal\ Relief';
        P_A_Y_E__TAXCaptionLbl: label 'P.A.Y.E. TAX';
        ECaptionLbl: label 'E';
        E1__30_CaptionLbl: label 'E1 \30%';
        E2__ActualCaptionLbl: label 'E2 \Actual';
        E3__FIXEDCaptionLbl: label 'E3 \FIXED';
        ACaptionLbl: label 'A';
        BCaptionLbl: label 'B';
        CCaptionLbl: label 'C';
        DCaptionLbl: label 'D';
        F__Amount_of_InterestCaptionLbl: label 'F \Amount of Interest';
        G__Lowest_of_E_added_to_FCaptionLbl: label 'G \Lowest of E added to F';
        HCaptionLbl: label 'H';
        JCaptionLbl: label 'J';
        V1_162_00CaptionLbl: label '1,162.00';
        KCaptionLbl: label 'K';
        V0CaptionLbl: label '0';
        LCaptionLbl: label 'L';
        Total__Kshs___1_162_00CaptionLbl: label 'Total (Kshs) \1,162.00';
        Employee_s_MainCaptionLbl: label 'Employee''s Main';
        Personal_File_No_CaptionLbl: label 'Personal File No.';
        Employee_PINCaptionLbl: label 'Employee PIN';
        Tobe_completed_by_Employer_at_end_of_yearCaptionLbl: label 'Tobe completed by Employer at end of year';
        IMPORTANTCaptionLbl: label 'IMPORTANT';
        NAMES_OF_MORTGAGE_FINANCIAL_INSTITUTION______________________Lbl: label 'NAMES OF MORTGAGE FINANCIAL INSTITUTION .....................................................';
        L_R__No__OF_OWNER_OCCUPIED_HOUSE_____________________________________________DATE_OF_OCCUPATILbl: label 'L.R. No. OF OWNER OCCUPIED HOUSE........................................................................';
        DATE_OF_OCCUPATION: label 'DATE OF OCCUPATION...............................................................................................';
        TotalCaptionLbl: label 'Total';
        TOTAL_CHARGEABLE_PAY__COL_h__KshsCaptionLbl: label 'TOTAL CHARGEABLE PAY (COL h) Kshs';
        TOTAL_CHARGEABLE_PAY__COL_l__KshsCaptionLbl: label 'TOTAL CHARGEABLE PAY (COL l) Kshs';
        V1__Use_P9ACaptionLbl: label '1. Use P9A';
        a__For_all_liable_employees_and_where_director_employee_received_Benefits_in_additions_to_cash_emoluments_CaptionLbl: label '(a) For all liable employees and where director/employee received';
        next: label ' Benefits in additions to cash emoluments.';
        b__Where_an_employee_is_eligible_to_deduction_on_owner_occupier_interest_CaptionLbl: label '(b) Where an employee is eligible to deduction on owner occupier interest.';
        V2___a__Allowable_interest_in_respect_of_any_month_mustnot_exceed_Kshs_12_500___per_year_CaptionLbl: label '2. (a) Allowable interest in respect of any month mustnot exceed Kshs.12,500/= per year.';
        V2___a__Allowable_interest_in_respect_of_any_month_mustnot_exceed_Kshs_12_500___per_year_Caption_Control1102755010Lbl: label '2. (a) Allowable interest in respect of any month mustnot exceed Kshs.12,500/= per year.';
        See_back_of_this_card_for_further_information_required_by_the_department__CaptionLbl: label '(See back of this card for further information required by the department).';
        i__Photostat_copy_of_interest_certificate_and_statement_of_account_from_the_Financial_Institution_CaptionLbl: label ' (i) Photostat copy of interest certificate and statement of account from the Financial Institution.';
        b__AttachCaptionLbl: label '(b) Attach';
        ii__THE_DECLARATION_duly_signed_by_the_employee_CaptionLbl: label ' (ii) THE DECLARATION duly signed by the employee.';
        empcode: Code[20];
        PageGroupNo: Integer;
        NextPageGroupNo: Integer;
        UserSetup: Record "User Setup";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516348_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
