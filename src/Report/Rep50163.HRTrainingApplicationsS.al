#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport51516163_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50163 "HR Training ApplicationsS"
{
    RDLCLayout = 'Layouts/HRTrainingApplicationsS.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("HR Training Applications"; "HR Training Applications")
        {
            DataItemTableView = sorting("Application No");
            RequestFilterFields = "Application No";
            column(ReportForNavId_6373; 6373) { } // Autogenerated by ForNav - Do not delete
            column(CourseTitle_HRTrainingApplications; "HR Training Applications"."Course Title")
            {
                IncludeCaption = true;
            }
            column(FromDate_HRTrainingApplications; "HR Training Applications"."From Date")
            {
                IncludeCaption = true;
            }
            column(ToDate_HRTrainingApplications; "HR Training Applications"."To Date")
            {
                IncludeCaption = true;
            }
            column(DurationUnits_HRTrainingApplications; "HR Training Applications"."Duration Units")
            {
                IncludeCaption = true;
            }
            column(Duration_HRTrainingApplications; "HR Training Applications".Duration)
            {
                IncludeCaption = true;
            }
            column(CostOfTraining_HRTrainingApplications; "HR Training Applications"."Cost Of Training")
            {
                IncludeCaption = true;
            }
            column(Location_HRTrainingApplications; "HR Training Applications".Location)
            {
                IncludeCaption = true;
            }
            column(ApplicationNo_HRTrainingApplications; "HR Training Applications"."Application No")
            {
                IncludeCaption = true;
            }
            column(EmployeeNo_HRTrainingApplications; "HR Training Applications"."Employee No.")
            {
                IncludeCaption = true;
            }
            column(EmployeeName_HRTrainingApplications; "HR Training Applications"."Employee Name")
            {
                IncludeCaption = true;
            }
            column(ApplicationDate_HRTrainingApplications; "HR Training Applications"."Application Date")
            {
                IncludeCaption = true;
            }
            column(EmployeeDepartment_HRTrainingApplications; "HR Training Applications"."Employee Department")
            {
                IncludeCaption = true;
            }
            column(Description_HRTrainingApplications; "HR Training Applications".Description)
            {
            }
            column(PurposeofTraining_HRTrainingApplications; "HR Training Applications"."Purpose of Training")
            {
            }
            column(CI_Name; CI.Name)
            {
                IncludeCaption = true;
            }
            column(CI_Address; CI.Address)
            {
                IncludeCaption = true;
            }
            column(CI_Address2; CI."Address 2")
            {
                IncludeCaption = true;
            }
            column(CI_PhoneNo; CI."Phone No.")
            {
                IncludeCaption = true;
            }
            column(CI_Picture; CI.Picture)
            {
                IncludeCaption = true;
            }
            column(CI_City; CI.City)
            {
                IncludeCaption = true;
            }
            dataitem("Approval Comment Line"; "Approval Comment Line")
            {
                DataItemLink = "Document No." = field("Application No");
                DataItemLinkReference = "HR Training Applications";
                DataItemTableView = sorting("Table ID", "Document Type", "Document No.");
                column(ReportForNavId_8731; 8731) { } // Autogenerated by ForNav - Do not delete
                column(UserID_ApprovalCommentLine; "Approval Comment Line"."User ID")
                {
                    IncludeCaption = true;
                }
                column(Comment_ApprovalCommentLine; "Approval Comment Line".Comment)
                {
                    IncludeCaption = true;
                }
            }
            dataitem("Approval Entry"; "Approval Entry")
            {
                DataItemLink = "Document No." = field("Application No");
                DataItemLinkReference = "HR Training Applications";
                DataItemTableView = sorting("Table ID", "Document Type", "Document No.", "Sequence No.");
                column(ReportForNavId_1171; 1171) { } // Autogenerated by ForNav - Do not delete
                column(SenderID_ApprovalEntry; "Approval Entry"."Sender ID")
                {
                    IncludeCaption = true;
                }
                column(ApproverID_ApprovalEntry; "Approval Entry"."Approver ID")
                {
                    IncludeCaption = true;
                }
                column(DateTimeSentforApproval_ApprovalEntry; "Approval Entry"."Date-Time Sent for Approval")
                {
                    IncludeCaption = true;
                }
                dataitem("User Setup"; "User Setup")
                {
                    DataItemLink = "User ID" = field("Approver ID");
                    DataItemTableView = sorting("User ID");
                    column(ReportForNavId_7968; 7968) { } // Autogenerated by ForNav - Do not delete
                }
                trigger OnAfterGetRecord();
                begin
                    HREmp.Reset;
                    HREmp.SetRange(HREmp."User ID", "Approval Entry"."Approver ID");
                    if HREmp.Find('-') then
                        ApproverName := HREmp.FullName
                    else
                        ApproverName := '';
                end;

            }
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CI.Get();
        CI.CalcFields(CI.Picture);
        ;
        ReportsForNavPre;
    end;

    var
        CI: Record "Company Information";
        HREmp: Record "HR Employees";
        ApproverName: Text[30];
        HR_Training_ApplicationsCaptionLbl: label 'HR Training Applications';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        P_O__BoxCaptionLbl: label 'P.O. Box';
        Training_Application_FormCaptionLbl: label 'Training Application Form';
        Name_of_Training_CourseCaptionLbl: label 'Name of Training Course';
        From__Date_CaptionLbl: label 'From (Date)';
        Duration_CaptionLbl: label 'Duration ';
        To__Date_CaptionLbl: label 'To (Date)';
        Cost_of_TrainingCaptionLbl: label 'Cost of Training';
        How_the_Training_Course_Will_Complement_Enhance_my_Skills_in_Relation_to_the_Job_RequirementsCaptionLbl: label 'How the Training Course Will Complement/Enhance my Skills in Relation to the Job Requirements';
        Brief_Description_of_Training_CourseCaptionLbl: label 'Brief Description of Training Course';
        CommentsCaptionLbl: label 'Comments';
        Comments_By_CaptionLbl: label 'Comments By:';
        End_of_CommentsCaptionLbl: label 'End of Comments';
        Approved_ByCaptionLbl: label 'Approved By';
        ApprovalsCaptionLbl: label 'Approvals';
        SignatureCaptionLbl: label 'Signature';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport51516163_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
